[
  {
    "name": "read",
    "options": [
      {
        "type": "short",
        "key": "a",
        "title": "-a aname",
        "description": "The words are assigned to sequential indices of the array variable aname, starting at 0. All elements are removed from aname before the assignment. Other name arguments are ignored."
      },
      {
        "type": "short",
        "key": "d",
        "title": "-d delim",
        "description": "The first character of delim is used to terminate the input line, rather than newline. If delim is the empty string, read will terminate a line when it reads a NUL character."
      },
      {
        "type": "short",
        "key": "e",
        "title": "-e",
        "description": "Readline (see Command Line Editing) is used to obtain the line. Readline uses the current (or default, if line editing was not previously active) editing settings, but uses Readlineâ€™s default filename completion."
      },
      {
        "type": "short",
        "key": "i",
        "title": "-i text",
        "description": "If Readline is being used to read the line, text is placed into the editing buffer before editing begins."
      },
      {
        "type": "short",
        "key": "n",
        "title": "-n nchars",
        "description": "read returns after reading nchars characters rather than waiting for a complete line of input, but honors a delimiter if fewer than nchars characters are read before the delimiter."
      },
      {
        "type": "short",
        "key": "N",
        "title": "-N nchars",
        "description": "read returns after reading exactly nchars characters rather than waiting for a complete line of input, unless EOF is encountered or read times out. Delimiter characters encountered in the input are not treated specially and do not cause read to return until nchars characters are read. The result is not split on the characters in IFS; the intent is that the variable is assigned exactly the characters read (with the exception of backslash; see the -r option below)."
      },
      {
        "type": "short",
        "key": "p",
        "title": "-p prompt",
        "description": "Display prompt, without a trailing newline, before attempting to read any input. The prompt is displayed only if input is coming from a terminal."
      },
      {
        "type": "short",
        "key": "r",
        "title": "-r",
        "description": "If this option is given, backslash does not act as an escape character. The backslash is considered to be part of the line. In particular, a backslash-newline pair may not then be used as a line continuation."
      },
      {
        "type": "short",
        "key": "s",
        "title": "-s",
        "description": "Silent mode. If input is coming from a terminal, characters are not echoed."
      },
      {
        "type": "short",
        "key": "t",
        "title": "-t timeout",
        "description": "Cause read to time out and return failure if a complete line of input (or a specified number of characters) is not read within timeout seconds. timeout may be a decimal number with a fractional portion following the decimal point. This option is only effective if read is reading input from a terminal, pipe, or other special file; it has no effect when reading from regular files. If read times out, read saves any partial input read into the specified variable name. If timeout is 0, read returns immediately, without trying to read any data. The exit status is 0 if input is available on the specified file descriptor, non-zero otherwise. The exit status is greater than 128 if the timeout is exceeded."
      },
      {
        "type": "short",
        "key": "u",
        "title": "-u fd",
        "description": "Read input from file descriptor fd."
      }
    ]
  }
]
