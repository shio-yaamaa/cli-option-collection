[
  {
    "name": "set",
    "optionStyle": "short-and-long",
    "options": [
      {
        "key": "a",
        "title": "-a",
        "description": "Mark variables which are modified or created for export."
      },
      {
        "key": "b",
        "title": "-b",
        "description": "Notify of job termination immediately."
      },
      {
        "key": "e",
        "title": "-e",
        "description": "Exit immediately if a command exits with a non-zero status."
      },
      {
        "key": "f",
        "title": "-f",
        "description": "Disable file name generation (globbing)."
      },
      {
        "key": "h",
        "title": "-h",
        "description": "Remember the location of commands as they are looked up."
      },
      {
        "key": "k",
        "title": "-k",
        "description": "All assignment arguments are placed in the environment for a command, not just those that precede the command name."
      },
      {
        "key": "m",
        "title": "-m",
        "description": "Job control is enabled."
      },
      {
        "key": "n",
        "title": "-n",
        "description": "Read commands but do not execute them."
      },
      {
        "key": "o",
        "title": "-o option-name",
        "description": "Set the variable corresponding to option-name: allexport same as -a braceexpand same as -B emacs use an emacs-style line editing interface errexit same as -e errtrace same as -E functrace same as -T hashall same as -h histexpand same as -H history enable command history ignoreeof the shell will not exit upon reading EOF interactive-comments allow comments to appear in interactive commands keyword same as -k monitor same as -m noclobber same as -C noexec same as -n noglob same as -f nolog currently accepted but ignored notify same as -b nounset same as -u onecmd same as -t physical same as -P pipefail the return value of a pipeline is the status of the last command to exit with a non-zero status, or zero if no command exited with a non-zero status posix change the behavior of bash where the default operation differs from the Posix standard to match the standard privileged same as -p verbose same as -v vi use a vi-style line editing interface xtrace same as -x"
      },
      {
        "key": "p",
        "title": "-p",
        "description": "Turned on whenever the real and effective user ids do not match. Disables processing of the $ENV file and importing of shell functions. Turning this option off causes the effective uid and gid to be set to the real uid and gid."
      },
      {
        "key": "t",
        "title": "-t",
        "description": "Exit after reading and executing one command."
      },
      {
        "key": "u",
        "title": "-u",
        "description": "Treat unset variables as an error when substituting."
      },
      {
        "key": "v",
        "title": "-v",
        "description": "Print shell input lines as they are read."
      },
      {
        "key": "x",
        "title": "-x",
        "description": "Print commands and their arguments as they are executed."
      },
      {
        "key": "B",
        "title": "-B",
        "description": "the shell will perform brace expansion"
      },
      {
        "key": "C",
        "title": "-C",
        "description": "If set, disallow existing regular files to be overwritten by redirection of output."
      },
      {
        "key": "E",
        "title": "-E",
        "description": "If set, the ERR trap is inherited by shell functions."
      },
      {
        "key": "H",
        "title": "-H",
        "description": "Enable ! style history substitution. This flag is on by default when the shell is interactive."
      },
      {
        "key": "P",
        "title": "-P",
        "description": "If set, do not resolve symbolic links when executing commands such as cd which change the current directory."
      },
      {
        "key": "T",
        "title": "-T",
        "description": "If set, the DEBUG and RETURN traps are inherited by shell functions."
      }
    ]
  }
]
