[
  {
    "name": "scp",
    "optionStyle": "short-and-long",
    "options": [
      {
        "key": "3",
        "title": "-3",
        "description": "Copies between two remote hosts are transferred through the local host. Without this option the data is copied directly between the two remote hosts. Note that, when using the legacy SCP protocol (via the -O flag), this option selects batch mode for the second host as scp cannot ask for passwords or passphrases for both hosts. This mode is the default."
      },
      {
        "key": "4",
        "title": "-4",
        "description": "Forces scp to use IPv4 addresses only."
      },
      {
        "key": "6",
        "title": "-6",
        "description": "Forces scp to use IPv6 addresses only."
      },
      {
        "key": "A",
        "title": "-A",
        "description": "Allows forwarding of ssh-agent(1) to the remote system. The default is not to forward an authentication agent."
      },
      {
        "key": "B",
        "title": "-B",
        "description": "Selects batch mode (prevents asking for passwords or passphrases)."
      },
      {
        "key": "C",
        "title": "-C",
        "description": "Compression enable. Passes the -C flag to ssh(1) to enable compression."
      },
      {
        "key": "c",
        "title": "-c cipher",
        "description": "Selects the cipher to use for encrypting the data transfer. This option is directly passed to ssh(1)."
      },
      {
        "key": "D",
        "title": "-D sftp_server_path",
        "description": "When using the SFTP protocol support via -M, connect directly to a local SFTP server program rather than a remote one via ssh(1). This option may be useful in debugging the client and server."
      },
      {
        "key": "F",
        "title": "-F ssh_config",
        "description": "Specifies an alternative per-user configuration file for ssh. This option is directly passed to ssh(1)."
      },
      {
        "key": "i",
        "title": "-i identity_file",
        "description": "Selects the file from which the identity (private key) for public key authentication is read. This option is directly passed to ssh(1)."
      },
      {
        "key": "J",
        "title": "-J destination",
        "description": "Connect to the target host by first making an scp connection to the jump host described by destination and then establishing a TCP forwarding to the ultimate destination from there. Multiple jump hops may be specified separated by comma characters. This is a shortcut to specify a ProxyJump configuration directive. This option is directly passed to ssh(1)."
      },
      {
        "key": "l",
        "title": "-l limit",
        "description": "Limits the used bandwidth, specified in Kbit/s."
      },
      {
        "key": "O",
        "title": "-O",
        "description": "Use the legacy SCP protocol for file transfers instead of the SFTP protocol. Forcing the use of the SCP protocol may be necessary for servers that do not implement SFTP, for backwards-compatibility for particular filename wildcard patterns and for expanding paths with a ‘~’ prefix for older SFTP servers."
      },
      {
        "key": "o",
        "title": "-o ssh_option",
        "description": "Can be used to pass options to ssh in the format used in ssh_config(5). This is useful for specifying options for which there is no separate scp command-line flag. For full details of the options listed below, and their possible values, see ssh_config(5).\n\nAddressFamily   BatchMode   BindAddress   BindInterface   CanonicalDomains   CanonicalizeFallbackLocal   CanonicalizeHostname   CanonicalizeMaxDots   CanonicalizePermittedCNAMEs   CASignatureAlgorithms   CertificateFile   CheckHostIP   Ciphers   Compression   ConnectionAttempts   ConnectTimeout   ControlMaster   ControlPath   ControlPersist   GlobalKnownHostsFile   GSSAPIAuthentication   GSSAPIDelegateCredentials   HashKnownHosts   Host   HostbasedAcceptedAlgorithms   HostbasedAuthentication   HostKeyAlgorithms   HostKeyAlias   Hostname   IdentitiesOnly   IdentityAgent   IdentityFile   IPQoS   KbdInteractiveAuthentication   KbdInteractiveDevices   KexAlgorithms   KnownHostsCommand   LogLevel   MACs   NoHostAuthenticationForLocalhost   NumberOfPasswordPrompts   PasswordAuthentication   PKCS11Provider   Port   PreferredAuthentications   ProxyCommand   ProxyJump   PubkeyAcceptedAlgorithms   PubkeyAuthentication   RekeyLimit   SendEnv   ServerAliveInterval   ServerAliveCountMax   SetEnv   StrictHostKeyChecking   TCPKeepAlive   UpdateHostKeys   User   UserKnownHostsFile   VerifyHostKeyDNS"
      },
      {
        "key": "P",
        "title": "-P port",
        "description": "Specifies the port to connect to on the remote host. Note that this option is written with a capital ‘P’, because -p is already reserved for preserving the times and mode bits of the file."
      },
      {
        "key": "p",
        "title": "-p",
        "description": "Preserves modification times, access times, and file mode bits from the source file."
      },
      {
        "key": "q",
        "title": "-q",
        "description": "Quiet mode: disables the progress meter as well as warning and diagnostic messages from ssh(1)."
      },
      {
        "key": "R",
        "title": "-R",
        "description": "Copies between two remote hosts are performed by connecting to the origin host and executing scp there. This requires that scp running on the origin host can authenticate to the destination host without requiring a password."
      },
      {
        "key": "r",
        "title": "-r",
        "description": "Recursively copy entire directories. Note that scp follows symbolic links encountered in the tree traversal."
      },
      {
        "key": "S",
        "title": "-S program",
        "description": "Name of program to use for the encrypted connection. The program must understand ssh(1) options."
      },
      {
        "key": "T",
        "title": "-T",
        "description": "Disable strict filename checking. By default when copying files from a remote host to a local directory scp checks that the received filenames match those requested on the command-line to prevent the remote end from sending unexpected or unwanted files. Because of differences in how various operating systems and shells interpret filename wildcards, these checks may cause wanted files to be rejected. This option disables these checks at the expense of fully trusting that the server will not send unexpected filenames."
      },
      {
        "key": "v",
        "title": "-v",
        "description": "Verbose mode. Causes scp and ssh(1) to print debugging messages about their progress. This is helpful in debugging connection, authentication, and configuration problems."
      }
    ]
  }
]
