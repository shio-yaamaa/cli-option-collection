[
  {
    "command": "docker attach",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "detach-keys": {
        "representation": "--detach-keys",
        "description": "Override the key sequence for detaching a container"
      },
      "no-stdin": {
        "representation": "--no-stdin",
        "description": "Do not attach STDIN"
      },
      "sig-proxy": {
        "representation": "--sig-proxy",
        "description": "Proxy all received signals to the process"
      }
    }
  },
  {
    "command": "docker build",
    "shortOptionDictionary": {
      "c": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "f": {
        "representation": "--file, -f",
        "description": "Name of the Dockerfile (Default is 'PATH/Dockerfile')"
      },
      "m": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "o": {
        "representation": "--output, -o",
        "description": "API 1.40+Output destination (format: type=local,dest=path)"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress the build output and print image ID on success"
      },
      "t": {
        "representation": "--tag, -t",
        "description": "Name and optionally a tag in the 'name:tag' format"
      }
    },
    "longOptionDictionary": {
      "add-host": {
        "representation": "--add-host",
        "description": "Add a custom host-to-IP mapping (host:ip)"
      },
      "build-arg": {
        "representation": "--build-arg",
        "description": "Set build-time variables"
      },
      "cache-from": {
        "representation": "--cache-from",
        "description": "Images to consider as cache sources"
      },
      "cgroup-parent": {
        "representation": "--cgroup-parent",
        "description": "Optional parent cgroup for the container"
      },
      "compress": {
        "representation": "--compress",
        "description": "Compress the build context using gzip"
      },
      "cpu-period": {
        "representation": "--cpu-period",
        "description": "Limit the CPU CFS (Completely Fair Scheduler) period"
      },
      "cpu-quota": {
        "representation": "--cpu-quota",
        "description": "Limit the CPU CFS (Completely Fair Scheduler) quota"
      },
      "cpu-shares": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "cpuset-cpus": {
        "representation": "--cpuset-cpus",
        "description": "CPUs in which to allow execution (0-3, 0,1)"
      },
      "cpuset-mems": {
        "representation": "--cpuset-mems",
        "description": "MEMs in which to allow execution (0-3, 0,1)"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image verification"
      },
      "file": {
        "representation": "--file, -f",
        "description": "Name of the Dockerfile (Default is 'PATH/Dockerfile')"
      },
      "force-rm": {
        "representation": "--force-rm",
        "description": "Always remove intermediate containers"
      },
      "iidfile": {
        "representation": "--iidfile",
        "description": "Write the image ID to the file"
      },
      "isolation": {
        "representation": "--isolation",
        "description": "Container isolation technology"
      },
      "label": {
        "representation": "--label",
        "description": "Set metadata for an image"
      },
      "memory": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "memory-swap": {
        "representation": "--memory-swap",
        "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap"
      },
      "network": {
        "representation": "--network",
        "description": "API 1.25+Set the networking mode for the RUN instructions during build"
      },
      "no-cache": {
        "representation": "--no-cache",
        "description": "Do not use cache when building the image"
      },
      "output": {
        "representation": "--output, -o",
        "description": "API 1.40+Output destination (format: type=local,dest=path)"
      },
      "platform": {
        "representation": "--platform",
        "description": "API 1.38+Set platform if server is multi-platform capable"
      },
      "progress": {
        "representation": "--progress",
        "description": "Set type of progress output (auto, plain, tty). Use plain to show container output"
      },
      "pull": {
        "representation": "--pull",
        "description": "Always attempt to pull a newer version of the image"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress the build output and print image ID on success"
      },
      "rm": {
        "representation": "--rm",
        "description": "Remove intermediate containers after a successful build"
      },
      "secret": {
        "representation": "--secret",
        "description": "API 1.39+Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret"
      },
      "security-opt": {
        "representation": "--security-opt",
        "description": "Security options"
      },
      "shm-size": {
        "representation": "--shm-size",
        "description": "Size of /dev/shm"
      },
      "squash": {
        "representation": "--squash",
        "description": "experimental (daemon)API 1.25+Squash newly built layers into a single new layer"
      },
      "ssh": {
        "representation": "--ssh",
        "description": "API 1.39+SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])"
      },
      "stream": {
        "representation": "--stream",
        "description": "Stream attaches to server to negotiate build context"
      },
      "tag": {
        "representation": "--tag, -t",
        "description": "Name and optionally a tag in the 'name:tag' format"
      },
      "target": {
        "representation": "--target",
        "description": "Set the target build stage to build."
      },
      "ulimit": {
        "representation": "--ulimit",
        "description": "Ulimit options"
      }
    }
  },
  {
    "command": "docker builder",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker checkpoint",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker commit",
    "shortOptionDictionary": {
      "a": {
        "representation": "--author, -a",
        "description": "Author (e.g., \"John Hannibal Smith <hannibal@a-team.com>\")"
      },
      "c": {
        "representation": "--change, -c",
        "description": "Apply Dockerfile instruction to the created image"
      },
      "m": {
        "representation": "--message, -m",
        "description": "Commit message"
      },
      "p": {
        "representation": "--pause, -p",
        "description": "Pause container during commit"
      }
    },
    "longOptionDictionary": {
      "author": {
        "representation": "--author, -a",
        "description": "Author (e.g., \"John Hannibal Smith <hannibal@a-team.com>\")"
      },
      "change": {
        "representation": "--change, -c",
        "description": "Apply Dockerfile instruction to the created image"
      },
      "message": {
        "representation": "--message, -m",
        "description": "Commit message"
      },
      "pause": {
        "representation": "--pause, -p",
        "description": "Pause container during commit"
      }
    }
  },
  {
    "command": "docker config",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker container",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker context",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker cp",
    "shortOptionDictionary": {
      "a": {
        "representation": "--archive, -a",
        "description": "Archive mode (copy all uid/gid information)"
      },
      "L": {
        "representation": "--follow-link, -L",
        "description": "Always follow symbol link in SRC_PATH"
      }
    },
    "longOptionDictionary": {
      "archive": {
        "representation": "--archive, -a",
        "description": "Archive mode (copy all uid/gid information)"
      },
      "follow-link": {
        "representation": "--follow-link, -L",
        "description": "Always follow symbol link in SRC_PATH"
      }
    }
  },
  {
    "command": "docker create",
    "shortOptionDictionary": {
      "a": {
        "representation": "--attach, -a",
        "description": "Attach to STDIN, STDOUT or STDERR"
      },
      "c": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "e": {
        "representation": "--env, -e",
        "description": "Set environment variables"
      },
      "h": {
        "representation": "--hostname, -h",
        "description": "Container host name"
      },
      "i": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "l": {
        "representation": "--label, -l",
        "description": "Set meta data on a container"
      },
      "m": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "p": {
        "representation": "--publish, -p",
        "description": "Publish a container's port(s) to the host"
      },
      "P": {
        "representation": "--publish-all, -P",
        "description": "Publish all exposed ports to random ports"
      },
      "t": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "u": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "v": {
        "representation": "--volume, -v",
        "description": "Bind mount a volume"
      },
      "w": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    },
    "longOptionDictionary": {
      "add-host": {
        "representation": "--add-host",
        "description": "Add a custom host-to-IP mapping (host:ip)"
      },
      "attach": {
        "representation": "--attach, -a",
        "description": "Attach to STDIN, STDOUT or STDERR"
      },
      "blkio-weight": {
        "representation": "--blkio-weight",
        "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)"
      },
      "blkio-weight-device": {
        "representation": "--blkio-weight-device",
        "description": "Block IO weight (relative device weight)"
      },
      "cap-add": {
        "representation": "--cap-add",
        "description": "Add Linux capabilities"
      },
      "cap-drop": {
        "representation": "--cap-drop",
        "description": "Drop Linux capabilities"
      },
      "cgroup-parent": {
        "representation": "--cgroup-parent",
        "description": "Optional parent cgroup for the container"
      },
      "cgroupns": {
        "representation": "--cgroupns",
        "description": "API 1.41+Cgroup namespace to use (host|private)\n'host':    Run the container in the Docker host's cgroup namespace\n'private': Run the container in its own private cgroup namespace\n'':        Use the cgroup namespace as configured by the\n           default-cgroupns-mode option on the daemon (default)"
      },
      "cidfile": {
        "representation": "--cidfile",
        "description": "Write the container ID to the file"
      },
      "cpu-count": {
        "representation": "--cpu-count",
        "description": "CPU count (Windows only)"
      },
      "cpu-percent": {
        "representation": "--cpu-percent",
        "description": "CPU percent (Windows only)"
      },
      "cpu-period": {
        "representation": "--cpu-period",
        "description": "Limit CPU CFS (Completely Fair Scheduler) period"
      },
      "cpu-quota": {
        "representation": "--cpu-quota",
        "description": "Limit CPU CFS (Completely Fair Scheduler) quota"
      },
      "cpu-rt-period": {
        "representation": "--cpu-rt-period",
        "description": "API 1.25+Limit CPU real-time period in microseconds"
      },
      "cpu-rt-runtime": {
        "representation": "--cpu-rt-runtime",
        "description": "API 1.25+Limit CPU real-time runtime in microseconds"
      },
      "cpu-shares": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "cpus": {
        "representation": "--cpus",
        "description": "API 1.25+Number of CPUs"
      },
      "cpuset-cpus": {
        "representation": "--cpuset-cpus",
        "description": "CPUs in which to allow execution (0-3, 0,1)"
      },
      "cpuset-mems": {
        "representation": "--cpuset-mems",
        "description": "MEMs in which to allow execution (0-3, 0,1)"
      },
      "device": {
        "representation": "--device",
        "description": "Add a host device to the container"
      },
      "device-cgroup-rule": {
        "representation": "--device-cgroup-rule",
        "description": "Add a rule to the cgroup allowed devices list"
      },
      "device-read-bps": {
        "representation": "--device-read-bps",
        "description": "Limit read rate (bytes per second) from a device"
      },
      "device-read-iops": {
        "representation": "--device-read-iops",
        "description": "Limit read rate (IO per second) from a device"
      },
      "device-write-bps": {
        "representation": "--device-write-bps",
        "description": "Limit write rate (bytes per second) to a device"
      },
      "device-write-iops": {
        "representation": "--device-write-iops",
        "description": "Limit write rate (IO per second) to a device"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image verification"
      },
      "dns": {
        "representation": "--dns",
        "description": "Set custom DNS servers"
      },
      "dns-opt": {
        "representation": "--dns-opt",
        "description": "Set DNS options"
      },
      "dns-option": {
        "representation": "--dns-option",
        "description": "Set DNS options"
      },
      "dns-search": {
        "representation": "--dns-search",
        "description": "Set custom DNS search domains"
      },
      "domainname": {
        "representation": "--domainname",
        "description": "Container NIS domain name"
      },
      "entrypoint": {
        "representation": "--entrypoint",
        "description": "Overwrite the default ENTRYPOINT of the image"
      },
      "env": {
        "representation": "--env, -e",
        "description": "Set environment variables"
      },
      "env-file": {
        "representation": "--env-file",
        "description": "Read in a file of environment variables"
      },
      "expose": {
        "representation": "--expose",
        "description": "Expose a port or a range of ports"
      },
      "gpus": {
        "representation": "--gpus",
        "description": "API 1.40+GPU devices to add to the container ('all' to pass all GPUs)"
      },
      "group-add": {
        "representation": "--group-add",
        "description": "Add additional groups to join"
      },
      "health-cmd": {
        "representation": "--health-cmd",
        "description": "Command to run to check health"
      },
      "health-interval": {
        "representation": "--health-interval",
        "description": "Time between running the check (ms|s|m|h) (default 0s)"
      },
      "health-retries": {
        "representation": "--health-retries",
        "description": "Consecutive failures needed to report unhealthy"
      },
      "health-start-period": {
        "representation": "--health-start-period",
        "description": "API 1.29+Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)"
      },
      "health-timeout": {
        "representation": "--health-timeout",
        "description": "Maximum time to allow one check to run (ms|s|m|h) (default 0s)"
      },
      "help": {
        "representation": "--help",
        "description": "Print usage"
      },
      "hostname": {
        "representation": "--hostname, -h",
        "description": "Container host name"
      },
      "init": {
        "representation": "--init",
        "description": "API 1.25+Run an init inside the container that forwards signals and reaps processes"
      },
      "interactive": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "io-maxbandwidth": {
        "representation": "--io-maxbandwidth",
        "description": "Maximum IO bandwidth limit for the system drive (Windows only)"
      },
      "io-maxiops": {
        "representation": "--io-maxiops",
        "description": "Maximum IOps limit for the system drive (Windows only)"
      },
      "ip": {
        "representation": "--ip",
        "description": "IPv4 address (e.g., 172.30.100.104)"
      },
      "ip6": {
        "representation": "--ip6",
        "description": "IPv6 address (e.g., 2001:db8::33)"
      },
      "ipc": {
        "representation": "--ipc",
        "description": "IPC mode to use"
      },
      "isolation": {
        "representation": "--isolation",
        "description": "Container isolation technology"
      },
      "kernel-memory": {
        "representation": "--kernel-memory",
        "description": "Kernel memory limit"
      },
      "label": {
        "representation": "--label, -l",
        "description": "Set meta data on a container"
      },
      "label-file": {
        "representation": "--label-file",
        "description": "Read in a line delimited file of labels"
      },
      "link": {
        "representation": "--link",
        "description": "Add link to another container"
      },
      "link-local-ip": {
        "representation": "--link-local-ip",
        "description": "Container IPv4/IPv6 link-local addresses"
      },
      "log-driver": {
        "representation": "--log-driver",
        "description": "Logging driver for the container"
      },
      "log-opt": {
        "representation": "--log-opt",
        "description": "Log driver options"
      },
      "mac-address": {
        "representation": "--mac-address",
        "description": "Container MAC address (e.g., 92:d0:c6:0a:29:33)"
      },
      "memory": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "memory-reservation": {
        "representation": "--memory-reservation",
        "description": "Memory soft limit"
      },
      "memory-swap": {
        "representation": "--memory-swap",
        "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap"
      },
      "memory-swappiness": {
        "representation": "--memory-swappiness",
        "description": "Tune container memory swappiness (0 to 100)"
      },
      "mount": {
        "representation": "--mount",
        "description": "Attach a filesystem mount to the container"
      },
      "name": {
        "representation": "--name",
        "description": "Assign a name to the container"
      },
      "net": {
        "representation": "--net",
        "description": "Connect a container to a network"
      },
      "net-alias": {
        "representation": "--net-alias",
        "description": "Add network-scoped alias for the container"
      },
      "network": {
        "representation": "--network",
        "description": "Connect a container to a network"
      },
      "network-alias": {
        "representation": "--network-alias",
        "description": "Add network-scoped alias for the container"
      },
      "no-healthcheck": {
        "representation": "--no-healthcheck",
        "description": "Disable any container-specified HEALTHCHECK"
      },
      "oom-kill-disable": {
        "representation": "--oom-kill-disable",
        "description": "Disable OOM Killer"
      },
      "oom-score-adj": {
        "representation": "--oom-score-adj",
        "description": "Tune host's OOM preferences (-1000 to 1000)"
      },
      "pid": {
        "representation": "--pid",
        "description": "PID namespace to use"
      },
      "pids-limit": {
        "representation": "--pids-limit",
        "description": "Tune container pids limit (set -1 for unlimited)"
      },
      "platform": {
        "representation": "--platform",
        "description": "API 1.32+Set platform if server is multi-platform capable"
      },
      "privileged": {
        "representation": "--privileged",
        "description": "Give extended privileges to this container"
      },
      "publish": {
        "representation": "--publish, -p",
        "description": "Publish a container's port(s) to the host"
      },
      "publish-all": {
        "representation": "--publish-all, -P",
        "description": "Publish all exposed ports to random ports"
      },
      "pull": {
        "representation": "--pull",
        "description": "Pull image before creating (\"always\"|\"missing\"|\"never\")"
      },
      "read-only": {
        "representation": "--read-only",
        "description": "Mount the container's root filesystem as read only"
      },
      "restart": {
        "representation": "--restart",
        "description": "Restart policy to apply when a container exits"
      },
      "rm": {
        "representation": "--rm",
        "description": "Automatically remove the container when it exits"
      },
      "runtime": {
        "representation": "--runtime",
        "description": "Runtime to use for this container"
      },
      "security-opt": {
        "representation": "--security-opt",
        "description": "Security Options"
      },
      "shm-size": {
        "representation": "--shm-size",
        "description": "Size of /dev/shm"
      },
      "stop-signal": {
        "representation": "--stop-signal",
        "description": "Signal to stop a container"
      },
      "stop-timeout": {
        "representation": "--stop-timeout",
        "description": "API 1.25+Timeout (in seconds) to stop a container"
      },
      "storage-opt": {
        "representation": "--storage-opt",
        "description": "Storage driver options for the container"
      },
      "sysctl": {
        "representation": "--sysctl",
        "description": "Sysctl options"
      },
      "tmpfs": {
        "representation": "--tmpfs",
        "description": "Mount a tmpfs directory"
      },
      "tty": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "ulimit": {
        "representation": "--ulimit",
        "description": "Ulimit options"
      },
      "user": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "userns": {
        "representation": "--userns",
        "description": "User namespace to use"
      },
      "uts": {
        "representation": "--uts",
        "description": "UTS namespace to use"
      },
      "volume": {
        "representation": "--volume, -v",
        "description": "Bind mount a volume"
      },
      "volume-driver": {
        "representation": "--volume-driver",
        "description": "Optional volume driver for the container"
      },
      "volumes-from": {
        "representation": "--volumes-from",
        "description": "Mount volumes from the specified container(s)"
      },
      "workdir": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    }
  },
  {
    "command": "docker diff",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker events",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Format the output using the given Go template"
      },
      "since": {
        "representation": "--since",
        "description": "Show all events created since timestamp"
      },
      "until": {
        "representation": "--until",
        "description": "Stream events until this timestamp"
      }
    }
  },
  {
    "command": "docker exec",
    "shortOptionDictionary": {
      "d": {
        "representation": "--detach, -d",
        "description": "Detached mode: run command in the background"
      },
      "e": {
        "representation": "--env, -e",
        "description": "API 1.25+Set environment variables"
      },
      "i": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "t": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "u": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "w": {
        "representation": "--workdir, -w",
        "description": "API 1.35+Working directory inside the container"
      }
    },
    "longOptionDictionary": {
      "detach": {
        "representation": "--detach, -d",
        "description": "Detached mode: run command in the background"
      },
      "detach-keys": {
        "representation": "--detach-keys",
        "description": "Override the key sequence for detaching a container"
      },
      "env": {
        "representation": "--env, -e",
        "description": "API 1.25+Set environment variables"
      },
      "env-file": {
        "representation": "--env-file",
        "description": "API 1.25+Read in a file of environment variables"
      },
      "interactive": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "privileged": {
        "representation": "--privileged",
        "description": "Give extended privileges to the command"
      },
      "tty": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "user": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "workdir": {
        "representation": "--workdir, -w",
        "description": "API 1.35+Working directory inside the container"
      }
    }
  },
  {
    "command": "docker export",
    "shortOptionDictionary": {
      "o": {
        "representation": "--output, -o",
        "description": "Write to a file, instead of STDOUT"
      }
    },
    "longOptionDictionary": {
      "output": {
        "representation": "--output, -o",
        "description": "Write to a file, instead of STDOUT"
      }
    }
  },
  {
    "command": "docker history",
    "shortOptionDictionary": {
      "H": {
        "representation": "--human, -H",
        "description": "Print sizes and dates in human readable format"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only show image IDs"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format",
        "description": "Pretty-print images using a Go template"
      },
      "human": {
        "representation": "--human, -H",
        "description": "Print sizes and dates in human readable format"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Don't truncate output"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only show image IDs"
      }
    }
  },
  {
    "command": "docker image",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker images",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all, -a",
        "description": "Show all images (default hides intermediate images)"
      },
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only show image IDs"
      }
    },
    "longOptionDictionary": {
      "all": {
        "representation": "--all, -a",
        "description": "Show all images (default hides intermediate images)"
      },
      "digests": {
        "representation": "--digests",
        "description": "Show digests"
      },
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print images using a Go template"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Don't truncate output"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only show image IDs"
      }
    }
  },
  {
    "command": "docker import",
    "shortOptionDictionary": {
      "c": {
        "representation": "--change, -c",
        "description": "Apply Dockerfile instruction to the created image"
      },
      "m": {
        "representation": "--message, -m",
        "description": "Set commit message for imported image"
      }
    },
    "longOptionDictionary": {
      "change": {
        "representation": "--change, -c",
        "description": "Apply Dockerfile instruction to the created image"
      },
      "message": {
        "representation": "--message, -m",
        "description": "Set commit message for imported image"
      },
      "platform": {
        "representation": "--platform",
        "description": "API 1.32+Set platform if server is multi-platform capable"
      }
    }
  },
  {
    "command": "docker info",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    }
  },
  {
    "command": "docker inspect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      },
      "s": {
        "representation": "--size, -s",
        "description": "Display total file sizes if the type is container"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      },
      "size": {
        "representation": "--size, -s",
        "description": "Display total file sizes if the type is container"
      },
      "type": {
        "representation": "--type",
        "description": "Return JSON for specified type"
      }
    }
  },
  {
    "command": "docker kill",
    "shortOptionDictionary": {
      "s": {
        "representation": "--signal, -s",
        "description": "Signal to send to the container"
      }
    },
    "longOptionDictionary": {
      "signal": {
        "representation": "--signal, -s",
        "description": "Signal to send to the container"
      }
    }
  },
  {
    "command": "docker load",
    "shortOptionDictionary": {
      "i": {
        "representation": "--input, -i",
        "description": "Read from tar archive file, instead of STDIN"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress the load output"
      }
    },
    "longOptionDictionary": {
      "input": {
        "representation": "--input, -i",
        "description": "Read from tar archive file, instead of STDIN"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress the load output"
      }
    }
  },
  {
    "command": "docker login",
    "shortOptionDictionary": {
      "p": {
        "representation": "--password, -p",
        "description": "Password"
      },
      "u": {
        "representation": "--username, -u",
        "description": "Username"
      }
    },
    "longOptionDictionary": {
      "password": {
        "representation": "--password, -p",
        "description": "Password"
      },
      "password-stdin": {
        "representation": "--password-stdin",
        "description": "Take the password from stdin"
      },
      "username": {
        "representation": "--username, -u",
        "description": "Username"
      }
    }
  },
  {
    "command": "docker logout",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker logs",
    "shortOptionDictionary": {
      "f": {
        "representation": "--follow, -f",
        "description": "Follow log output"
      },
      "n": {
        "representation": "--tail, -n",
        "description": "Number of lines to show from the end of the logs"
      },
      "t": {
        "representation": "--timestamps, -t",
        "description": "Show timestamps"
      }
    },
    "longOptionDictionary": {
      "details": {
        "representation": "--details",
        "description": "Show extra details provided to logs"
      },
      "follow": {
        "representation": "--follow, -f",
        "description": "Follow log output"
      },
      "since": {
        "representation": "--since",
        "description": "Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)"
      },
      "tail": {
        "representation": "--tail, -n",
        "description": "Number of lines to show from the end of the logs"
      },
      "timestamps": {
        "representation": "--timestamps, -t",
        "description": "Show timestamps"
      },
      "until": {
        "representation": "--until",
        "description": "API 1.35+Show logs before a timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)"
      }
    }
  },
  {
    "command": "docker manifest",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker network",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker node",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker pause",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker plugin",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker port",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker ps",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all, -a",
        "description": "Show all containers (default shows just running)"
      },
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "n": {
        "representation": "--last, -n",
        "description": "Show n last created containers (includes all states)"
      },
      "l": {
        "representation": "--latest, -l",
        "description": "Show the latest created container (includes all states)"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display container IDs"
      },
      "s": {
        "representation": "--size, -s",
        "description": "Display total file sizes"
      }
    },
    "longOptionDictionary": {
      "all": {
        "representation": "--all, -a",
        "description": "Show all containers (default shows just running)"
      },
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print containers using a Go template"
      },
      "last": {
        "representation": "--last, -n",
        "description": "Show n last created containers (includes all states)"
      },
      "latest": {
        "representation": "--latest, -l",
        "description": "Show the latest created container (includes all states)"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Don't truncate output"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display container IDs"
      },
      "size": {
        "representation": "--size, -s",
        "description": "Display total file sizes"
      }
    }
  },
  {
    "command": "docker pull",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all-tags, -a",
        "description": "Download all tagged images in the repository"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress verbose output"
      }
    },
    "longOptionDictionary": {
      "all-tags": {
        "representation": "--all-tags, -a",
        "description": "Download all tagged images in the repository"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image verification"
      },
      "platform": {
        "representation": "--platform",
        "description": "API 1.32+Set platform if server is multi-platform capable"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress verbose output"
      }
    }
  },
  {
    "command": "docker push",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all-tags, -a",
        "description": "Push all tagged images in the repository"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress verbose output"
      }
    },
    "longOptionDictionary": {
      "all-tags": {
        "representation": "--all-tags, -a",
        "description": "Push all tagged images in the repository"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image signing"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress verbose output"
      }
    }
  },
  {
    "command": "docker rename",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker restart",
    "shortOptionDictionary": {
      "t": {
        "representation": "--time, -t",
        "description": "Seconds to wait for stop before killing the container"
      }
    },
    "longOptionDictionary": {
      "time": {
        "representation": "--time, -t",
        "description": "Seconds to wait for stop before killing the container"
      }
    }
  },
  {
    "command": "docker rm",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Force the removal of a running container (uses SIGKILL)"
      },
      "l": {
        "representation": "--link, -l",
        "description": "Remove the specified link"
      },
      "v": {
        "representation": "--volumes, -v",
        "description": "Remove anonymous volumes associated with the container"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Force the removal of a running container (uses SIGKILL)"
      },
      "link": {
        "representation": "--link, -l",
        "description": "Remove the specified link"
      },
      "volumes": {
        "representation": "--volumes, -v",
        "description": "Remove anonymous volumes associated with the container"
      }
    }
  },
  {
    "command": "docker rmi",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Force removal of the image"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Force removal of the image"
      },
      "no-prune": {
        "representation": "--no-prune",
        "description": "Do not delete untagged parents"
      }
    }
  },
  {
    "command": "docker run",
    "shortOptionDictionary": {
      "a": {
        "representation": "--attach, -a",
        "description": "Attach to STDIN, STDOUT or STDERR"
      },
      "c": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "d": {
        "representation": "--detach, -d",
        "description": "Run container in background and print container ID"
      },
      "e": {
        "representation": "--env, -e",
        "description": "Set environment variables"
      },
      "h": {
        "representation": "--hostname, -h",
        "description": "Container host name"
      },
      "i": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "l": {
        "representation": "--label, -l",
        "description": "Set meta data on a container"
      },
      "m": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "p": {
        "representation": "--publish, -p",
        "description": "Publish a container's port(s) to the host"
      },
      "P": {
        "representation": "--publish-all, -P",
        "description": "Publish all exposed ports to random ports"
      },
      "t": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "u": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "v": {
        "representation": "--volume, -v",
        "description": "Bind mount a volume"
      },
      "w": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    },
    "longOptionDictionary": {
      "add-host": {
        "representation": "--add-host",
        "description": "Add a custom host-to-IP mapping (host:ip)"
      },
      "attach": {
        "representation": "--attach, -a",
        "description": "Attach to STDIN, STDOUT or STDERR"
      },
      "blkio-weight": {
        "representation": "--blkio-weight",
        "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)"
      },
      "blkio-weight-device": {
        "representation": "--blkio-weight-device",
        "description": "Block IO weight (relative device weight)"
      },
      "cap-add": {
        "representation": "--cap-add",
        "description": "Add Linux capabilities"
      },
      "cap-drop": {
        "representation": "--cap-drop",
        "description": "Drop Linux capabilities"
      },
      "cgroup-parent": {
        "representation": "--cgroup-parent",
        "description": "Optional parent cgroup for the container"
      },
      "cgroupns": {
        "representation": "--cgroupns",
        "description": "API 1.41+Cgroup namespace to use (host|private)\n'host':    Run the container in the Docker host's cgroup namespace\n'private': Run the container in its own private cgroup namespace\n'':        Use the cgroup namespace as configured by the\n           default-cgroupns-mode option on the daemon (default)"
      },
      "cidfile": {
        "representation": "--cidfile",
        "description": "Write the container ID to the file"
      },
      "cpu-count": {
        "representation": "--cpu-count",
        "description": "CPU count (Windows only)"
      },
      "cpu-percent": {
        "representation": "--cpu-percent",
        "description": "CPU percent (Windows only)"
      },
      "cpu-period": {
        "representation": "--cpu-period",
        "description": "Limit CPU CFS (Completely Fair Scheduler) period"
      },
      "cpu-quota": {
        "representation": "--cpu-quota",
        "description": "Limit CPU CFS (Completely Fair Scheduler) quota"
      },
      "cpu-rt-period": {
        "representation": "--cpu-rt-period",
        "description": "API 1.25+Limit CPU real-time period in microseconds"
      },
      "cpu-rt-runtime": {
        "representation": "--cpu-rt-runtime",
        "description": "API 1.25+Limit CPU real-time runtime in microseconds"
      },
      "cpu-shares": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "cpus": {
        "representation": "--cpus",
        "description": "API 1.25+Number of CPUs"
      },
      "cpuset-cpus": {
        "representation": "--cpuset-cpus",
        "description": "CPUs in which to allow execution (0-3, 0,1)"
      },
      "cpuset-mems": {
        "representation": "--cpuset-mems",
        "description": "MEMs in which to allow execution (0-3, 0,1)"
      },
      "detach": {
        "representation": "--detach, -d",
        "description": "Run container in background and print container ID"
      },
      "detach-keys": {
        "representation": "--detach-keys",
        "description": "Override the key sequence for detaching a container"
      },
      "device": {
        "representation": "--device",
        "description": "Add a host device to the container"
      },
      "device-cgroup-rule": {
        "representation": "--device-cgroup-rule",
        "description": "Add a rule to the cgroup allowed devices list"
      },
      "device-read-bps": {
        "representation": "--device-read-bps",
        "description": "Limit read rate (bytes per second) from a device"
      },
      "device-read-iops": {
        "representation": "--device-read-iops",
        "description": "Limit read rate (IO per second) from a device"
      },
      "device-write-bps": {
        "representation": "--device-write-bps",
        "description": "Limit write rate (bytes per second) to a device"
      },
      "device-write-iops": {
        "representation": "--device-write-iops",
        "description": "Limit write rate (IO per second) to a device"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image verification"
      },
      "dns": {
        "representation": "--dns",
        "description": "Set custom DNS servers"
      },
      "dns-opt": {
        "representation": "--dns-opt",
        "description": "Set DNS options"
      },
      "dns-option": {
        "representation": "--dns-option",
        "description": "Set DNS options"
      },
      "dns-search": {
        "representation": "--dns-search",
        "description": "Set custom DNS search domains"
      },
      "domainname": {
        "representation": "--domainname",
        "description": "Container NIS domain name"
      },
      "entrypoint": {
        "representation": "--entrypoint",
        "description": "Overwrite the default ENTRYPOINT of the image"
      },
      "env": {
        "representation": "--env, -e",
        "description": "Set environment variables"
      },
      "env-file": {
        "representation": "--env-file",
        "description": "Read in a file of environment variables"
      },
      "expose": {
        "representation": "--expose",
        "description": "Expose a port or a range of ports"
      },
      "gpus": {
        "representation": "--gpus",
        "description": "API 1.40+GPU devices to add to the container ('all' to pass all GPUs)"
      },
      "group-add": {
        "representation": "--group-add",
        "description": "Add additional groups to join"
      },
      "health-cmd": {
        "representation": "--health-cmd",
        "description": "Command to run to check health"
      },
      "health-interval": {
        "representation": "--health-interval",
        "description": "Time between running the check (ms|s|m|h) (default 0s)"
      },
      "health-retries": {
        "representation": "--health-retries",
        "description": "Consecutive failures needed to report unhealthy"
      },
      "health-start-period": {
        "representation": "--health-start-period",
        "description": "API 1.29+Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)"
      },
      "health-timeout": {
        "representation": "--health-timeout",
        "description": "Maximum time to allow one check to run (ms|s|m|h) (default 0s)"
      },
      "help": {
        "representation": "--help",
        "description": "Print usage"
      },
      "hostname": {
        "representation": "--hostname, -h",
        "description": "Container host name"
      },
      "init": {
        "representation": "--init",
        "description": "API 1.25+Run an init inside the container that forwards signals and reaps processes"
      },
      "interactive": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "io-maxbandwidth": {
        "representation": "--io-maxbandwidth",
        "description": "Maximum IO bandwidth limit for the system drive (Windows only)"
      },
      "io-maxiops": {
        "representation": "--io-maxiops",
        "description": "Maximum IOps limit for the system drive (Windows only)"
      },
      "ip": {
        "representation": "--ip",
        "description": "IPv4 address (e.g., 172.30.100.104)"
      },
      "ip6": {
        "representation": "--ip6",
        "description": "IPv6 address (e.g., 2001:db8::33)"
      },
      "ipc": {
        "representation": "--ipc",
        "description": "IPC mode to use"
      },
      "isolation": {
        "representation": "--isolation",
        "description": "Container isolation technology"
      },
      "kernel-memory": {
        "representation": "--kernel-memory",
        "description": "Kernel memory limit"
      },
      "label": {
        "representation": "--label, -l",
        "description": "Set meta data on a container"
      },
      "label-file": {
        "representation": "--label-file",
        "description": "Read in a line delimited file of labels"
      },
      "link": {
        "representation": "--link",
        "description": "Add link to another container"
      },
      "link-local-ip": {
        "representation": "--link-local-ip",
        "description": "Container IPv4/IPv6 link-local addresses"
      },
      "log-driver": {
        "representation": "--log-driver",
        "description": "Logging driver for the container"
      },
      "log-opt": {
        "representation": "--log-opt",
        "description": "Log driver options"
      },
      "mac-address": {
        "representation": "--mac-address",
        "description": "Container MAC address (e.g., 92:d0:c6:0a:29:33)"
      },
      "memory": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "memory-reservation": {
        "representation": "--memory-reservation",
        "description": "Memory soft limit"
      },
      "memory-swap": {
        "representation": "--memory-swap",
        "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap"
      },
      "memory-swappiness": {
        "representation": "--memory-swappiness",
        "description": "Tune container memory swappiness (0 to 100)"
      },
      "mount": {
        "representation": "--mount",
        "description": "Attach a filesystem mount to the container"
      },
      "name": {
        "representation": "--name",
        "description": "Assign a name to the container"
      },
      "net": {
        "representation": "--net",
        "description": "Connect a container to a network"
      },
      "net-alias": {
        "representation": "--net-alias",
        "description": "Add network-scoped alias for the container"
      },
      "network": {
        "representation": "--network",
        "description": "Connect a container to a network"
      },
      "network-alias": {
        "representation": "--network-alias",
        "description": "Add network-scoped alias for the container"
      },
      "no-healthcheck": {
        "representation": "--no-healthcheck",
        "description": "Disable any container-specified HEALTHCHECK"
      },
      "oom-kill-disable": {
        "representation": "--oom-kill-disable",
        "description": "Disable OOM Killer"
      },
      "oom-score-adj": {
        "representation": "--oom-score-adj",
        "description": "Tune host's OOM preferences (-1000 to 1000)"
      },
      "pid": {
        "representation": "--pid",
        "description": "PID namespace to use"
      },
      "pids-limit": {
        "representation": "--pids-limit",
        "description": "Tune container pids limit (set -1 for unlimited)"
      },
      "platform": {
        "representation": "--platform",
        "description": "API 1.32+Set platform if server is multi-platform capable"
      },
      "privileged": {
        "representation": "--privileged",
        "description": "Give extended privileges to this container"
      },
      "publish": {
        "representation": "--publish, -p",
        "description": "Publish a container's port(s) to the host"
      },
      "publish-all": {
        "representation": "--publish-all, -P",
        "description": "Publish all exposed ports to random ports"
      },
      "pull": {
        "representation": "--pull",
        "description": "Pull image before running (\"always\"|\"missing\"|\"never\")"
      },
      "read-only": {
        "representation": "--read-only",
        "description": "Mount the container's root filesystem as read only"
      },
      "restart": {
        "representation": "--restart",
        "description": "Restart policy to apply when a container exits"
      },
      "rm": {
        "representation": "--rm",
        "description": "Automatically remove the container when it exits"
      },
      "runtime": {
        "representation": "--runtime",
        "description": "Runtime to use for this container"
      },
      "security-opt": {
        "representation": "--security-opt",
        "description": "Security Options"
      },
      "shm-size": {
        "representation": "--shm-size",
        "description": "Size of /dev/shm"
      },
      "sig-proxy": {
        "representation": "--sig-proxy",
        "description": "Proxy received signals to the process"
      },
      "stop-signal": {
        "representation": "--stop-signal",
        "description": "Signal to stop a container"
      },
      "stop-timeout": {
        "representation": "--stop-timeout",
        "description": "API 1.25+Timeout (in seconds) to stop a container"
      },
      "storage-opt": {
        "representation": "--storage-opt",
        "description": "Storage driver options for the container"
      },
      "sysctl": {
        "representation": "--sysctl",
        "description": "Sysctl options"
      },
      "tmpfs": {
        "representation": "--tmpfs",
        "description": "Mount a tmpfs directory"
      },
      "tty": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "ulimit": {
        "representation": "--ulimit",
        "description": "Ulimit options"
      },
      "user": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "userns": {
        "representation": "--userns",
        "description": "User namespace to use"
      },
      "uts": {
        "representation": "--uts",
        "description": "UTS namespace to use"
      },
      "volume": {
        "representation": "--volume, -v",
        "description": "Bind mount a volume"
      },
      "volume-driver": {
        "representation": "--volume-driver",
        "description": "Optional volume driver for the container"
      },
      "volumes-from": {
        "representation": "--volumes-from",
        "description": "Mount volumes from the specified container(s)"
      },
      "workdir": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    }
  },
  {
    "command": "docker save",
    "shortOptionDictionary": {
      "o": {
        "representation": "--output, -o",
        "description": "Write to a file, instead of STDOUT"
      }
    },
    "longOptionDictionary": {
      "output": {
        "representation": "--output, -o",
        "description": "Write to a file, instead of STDOUT"
      }
    }
  },
  {
    "command": "docker search",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print search using a Go template"
      },
      "limit": {
        "representation": "--limit",
        "description": "Max number of search results"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Don't truncate output"
      }
    }
  },
  {
    "command": "docker secret",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker service",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker stack",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "kubeconfig": {
        "representation": "--kubeconfig",
        "description": "deprecatedKubernetesKubernetes config file"
      },
      "orchestrator": {
        "representation": "--orchestrator",
        "description": "deprecatedOrchestrator to use (swarm|kubernetes|all)"
      }
    }
  },
  {
    "command": "docker start",
    "shortOptionDictionary": {
      "a": {
        "representation": "--attach, -a",
        "description": "Attach STDOUT/STDERR and forward signals"
      },
      "i": {
        "representation": "--interactive, -i",
        "description": "Attach container's STDIN"
      }
    },
    "longOptionDictionary": {
      "attach": {
        "representation": "--attach, -a",
        "description": "Attach STDOUT/STDERR and forward signals"
      },
      "checkpoint": {
        "representation": "--checkpoint",
        "description": "experimental (daemon)Restore from this checkpoint"
      },
      "checkpoint-dir": {
        "representation": "--checkpoint-dir",
        "description": "experimental (daemon)Use a custom checkpoint storage directory"
      },
      "detach-keys": {
        "representation": "--detach-keys",
        "description": "Override the key sequence for detaching a container"
      },
      "interactive": {
        "representation": "--interactive, -i",
        "description": "Attach container's STDIN"
      }
    }
  },
  {
    "command": "docker stats",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all, -a",
        "description": "Show all containers (default shows just running)"
      }
    },
    "longOptionDictionary": {
      "all": {
        "representation": "--all, -a",
        "description": "Show all containers (default shows just running)"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print images using a Go template"
      },
      "no-stream": {
        "representation": "--no-stream",
        "description": "Disable streaming stats and only pull the first result"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Do not truncate output"
      }
    }
  },
  {
    "command": "docker stop",
    "shortOptionDictionary": {
      "t": {
        "representation": "--time, -t",
        "description": "Seconds to wait for stop before killing it"
      }
    },
    "longOptionDictionary": {
      "time": {
        "representation": "--time, -t",
        "description": "Seconds to wait for stop before killing it"
      }
    }
  },
  {
    "command": "docker swarm",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker system",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker tag",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker top",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker trust",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker unpause",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker update",
    "shortOptionDictionary": {
      "c": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "m": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      }
    },
    "longOptionDictionary": {
      "blkio-weight": {
        "representation": "--blkio-weight",
        "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)"
      },
      "cpu-period": {
        "representation": "--cpu-period",
        "description": "Limit CPU CFS (Completely Fair Scheduler) period"
      },
      "cpu-quota": {
        "representation": "--cpu-quota",
        "description": "Limit CPU CFS (Completely Fair Scheduler) quota"
      },
      "cpu-rt-period": {
        "representation": "--cpu-rt-period",
        "description": "API 1.25+Limit the CPU real-time period in microseconds"
      },
      "cpu-rt-runtime": {
        "representation": "--cpu-rt-runtime",
        "description": "API 1.25+Limit the CPU real-time runtime in microseconds"
      },
      "cpu-shares": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "cpus": {
        "representation": "--cpus",
        "description": "API 1.29+Number of CPUs"
      },
      "cpuset-cpus": {
        "representation": "--cpuset-cpus",
        "description": "CPUs in which to allow execution (0-3, 0,1)"
      },
      "cpuset-mems": {
        "representation": "--cpuset-mems",
        "description": "MEMs in which to allow execution (0-3, 0,1)"
      },
      "kernel-memory": {
        "representation": "--kernel-memory",
        "description": "Kernel memory limit"
      },
      "memory": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "memory-reservation": {
        "representation": "--memory-reservation",
        "description": "Memory soft limit"
      },
      "memory-swap": {
        "representation": "--memory-swap",
        "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap"
      },
      "pids-limit": {
        "representation": "--pids-limit",
        "description": "API 1.40+Tune container pids limit (set -1 for unlimited)"
      },
      "restart": {
        "representation": "--restart",
        "description": "Restart policy to apply when a container exits"
      }
    }
  },
  {
    "command": "docker version",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      },
      "kubeconfig": {
        "representation": "--kubeconfig",
        "description": "deprecatedKubernetesKubernetes config file"
      }
    }
  },
  {
    "command": "docker volume",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker wait",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker builder build",
    "shortOptionDictionary": {
      "c": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "f": {
        "representation": "--file, -f",
        "description": "Name of the Dockerfile (Default is 'PATH/Dockerfile')"
      },
      "m": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "o": {
        "representation": "--output, -o",
        "description": "API 1.40+Output destination (format: type=local,dest=path)"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress the build output and print image ID on success"
      },
      "t": {
        "representation": "--tag, -t",
        "description": "Name and optionally a tag in the 'name:tag' format"
      }
    },
    "longOptionDictionary": {
      "add-host": {
        "representation": "--add-host",
        "description": "Add a custom host-to-IP mapping (host:ip)"
      },
      "build-arg": {
        "representation": "--build-arg",
        "description": "Set build-time variables"
      },
      "cache-from": {
        "representation": "--cache-from",
        "description": "Images to consider as cache sources"
      },
      "cgroup-parent": {
        "representation": "--cgroup-parent",
        "description": "Optional parent cgroup for the container"
      },
      "compress": {
        "representation": "--compress",
        "description": "Compress the build context using gzip"
      },
      "cpu-period": {
        "representation": "--cpu-period",
        "description": "Limit the CPU CFS (Completely Fair Scheduler) period"
      },
      "cpu-quota": {
        "representation": "--cpu-quota",
        "description": "Limit the CPU CFS (Completely Fair Scheduler) quota"
      },
      "cpu-shares": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "cpuset-cpus": {
        "representation": "--cpuset-cpus",
        "description": "CPUs in which to allow execution (0-3, 0,1)"
      },
      "cpuset-mems": {
        "representation": "--cpuset-mems",
        "description": "MEMs in which to allow execution (0-3, 0,1)"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image verification"
      },
      "file": {
        "representation": "--file, -f",
        "description": "Name of the Dockerfile (Default is 'PATH/Dockerfile')"
      },
      "force-rm": {
        "representation": "--force-rm",
        "description": "Always remove intermediate containers"
      },
      "iidfile": {
        "representation": "--iidfile",
        "description": "Write the image ID to the file"
      },
      "isolation": {
        "representation": "--isolation",
        "description": "Container isolation technology"
      },
      "label": {
        "representation": "--label",
        "description": "Set metadata for an image"
      },
      "memory": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "memory-swap": {
        "representation": "--memory-swap",
        "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap"
      },
      "network": {
        "representation": "--network",
        "description": "API 1.25+Set the networking mode for the RUN instructions during build"
      },
      "no-cache": {
        "representation": "--no-cache",
        "description": "Do not use cache when building the image"
      },
      "output": {
        "representation": "--output, -o",
        "description": "API 1.40+Output destination (format: type=local,dest=path)"
      },
      "platform": {
        "representation": "--platform",
        "description": "API 1.38+Set platform if server is multi-platform capable"
      },
      "progress": {
        "representation": "--progress",
        "description": "Set type of progress output (auto, plain, tty). Use plain to show container output"
      },
      "pull": {
        "representation": "--pull",
        "description": "Always attempt to pull a newer version of the image"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress the build output and print image ID on success"
      },
      "rm": {
        "representation": "--rm",
        "description": "Remove intermediate containers after a successful build"
      },
      "secret": {
        "representation": "--secret",
        "description": "API 1.39+Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret"
      },
      "security-opt": {
        "representation": "--security-opt",
        "description": "Security options"
      },
      "shm-size": {
        "representation": "--shm-size",
        "description": "Size of /dev/shm"
      },
      "squash": {
        "representation": "--squash",
        "description": "experimental (daemon)API 1.25+Squash newly built layers into a single new layer"
      },
      "ssh": {
        "representation": "--ssh",
        "description": "API 1.39+SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])"
      },
      "stream": {
        "representation": "--stream",
        "description": "Stream attaches to server to negotiate build context"
      },
      "tag": {
        "representation": "--tag, -t",
        "description": "Name and optionally a tag in the 'name:tag' format"
      },
      "target": {
        "representation": "--target",
        "description": "Set the target build stage to build."
      },
      "ulimit": {
        "representation": "--ulimit",
        "description": "Ulimit options"
      }
    }
  },
  {
    "command": "docker builder prune",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all, -a",
        "description": "Remove all unused build cache, not just dangling ones"
      },
      "f": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      }
    },
    "longOptionDictionary": {
      "all": {
        "representation": "--all, -a",
        "description": "Remove all unused build cache, not just dangling ones"
      },
      "filter": {
        "representation": "--filter",
        "description": "Provide filter values (e.g. 'until=24h')"
      },
      "force": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      },
      "keep-storage": {
        "representation": "--keep-storage",
        "description": "Amount of disk space to keep for cache"
      }
    }
  },
  {
    "command": "docker checkpoint create",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "checkpoint-dir": {
        "representation": "--checkpoint-dir",
        "description": "Use a custom checkpoint storage directory"
      },
      "leave-running": {
        "representation": "--leave-running",
        "description": "Leave the container running after checkpoint"
      }
    }
  },
  {
    "command": "docker checkpoint ls",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "checkpoint-dir": {
        "representation": "--checkpoint-dir",
        "description": "Use a custom checkpoint storage directory"
      }
    }
  },
  {
    "command": "docker checkpoint rm",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "checkpoint-dir": {
        "representation": "--checkpoint-dir",
        "description": "Use a custom checkpoint storage directory"
      }
    }
  },
  {
    "command": "docker config create",
    "shortOptionDictionary": {
      "l": {
        "representation": "--label, -l",
        "description": "Config labels"
      }
    },
    "longOptionDictionary": {
      "label": {
        "representation": "--label, -l",
        "description": "Config labels"
      },
      "template-driver": {
        "representation": "--template-driver",
        "description": "API 1.37+Template driver"
      }
    }
  },
  {
    "command": "docker config inspect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      },
      "pretty": {
        "representation": "--pretty",
        "description": "Print the information in a human friendly format"
      }
    }
  },
  {
    "command": "docker config ls",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display IDs"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print configs using a Go template"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display IDs"
      }
    }
  },
  {
    "command": "docker config rm",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker container attach",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "detach-keys": {
        "representation": "--detach-keys",
        "description": "Override the key sequence for detaching a container"
      },
      "no-stdin": {
        "representation": "--no-stdin",
        "description": "Do not attach STDIN"
      },
      "sig-proxy": {
        "representation": "--sig-proxy",
        "description": "Proxy all received signals to the process"
      }
    }
  },
  {
    "command": "docker container commit",
    "shortOptionDictionary": {
      "a": {
        "representation": "--author, -a",
        "description": "Author (e.g., \"John Hannibal Smith <hannibal@a-team.com>\")"
      },
      "c": {
        "representation": "--change, -c",
        "description": "Apply Dockerfile instruction to the created image"
      },
      "m": {
        "representation": "--message, -m",
        "description": "Commit message"
      },
      "p": {
        "representation": "--pause, -p",
        "description": "Pause container during commit"
      }
    },
    "longOptionDictionary": {
      "author": {
        "representation": "--author, -a",
        "description": "Author (e.g., \"John Hannibal Smith <hannibal@a-team.com>\")"
      },
      "change": {
        "representation": "--change, -c",
        "description": "Apply Dockerfile instruction to the created image"
      },
      "message": {
        "representation": "--message, -m",
        "description": "Commit message"
      },
      "pause": {
        "representation": "--pause, -p",
        "description": "Pause container during commit"
      }
    }
  },
  {
    "command": "docker container cp",
    "shortOptionDictionary": {
      "a": {
        "representation": "--archive, -a",
        "description": "Archive mode (copy all uid/gid information)"
      },
      "L": {
        "representation": "--follow-link, -L",
        "description": "Always follow symbol link in SRC_PATH"
      }
    },
    "longOptionDictionary": {
      "archive": {
        "representation": "--archive, -a",
        "description": "Archive mode (copy all uid/gid information)"
      },
      "follow-link": {
        "representation": "--follow-link, -L",
        "description": "Always follow symbol link in SRC_PATH"
      }
    }
  },
  {
    "command": "docker container create",
    "shortOptionDictionary": {
      "a": {
        "representation": "--attach, -a",
        "description": "Attach to STDIN, STDOUT or STDERR"
      },
      "c": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "e": {
        "representation": "--env, -e",
        "description": "Set environment variables"
      },
      "h": {
        "representation": "--hostname, -h",
        "description": "Container host name"
      },
      "i": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "l": {
        "representation": "--label, -l",
        "description": "Set meta data on a container"
      },
      "m": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "p": {
        "representation": "--publish, -p",
        "description": "Publish a container's port(s) to the host"
      },
      "P": {
        "representation": "--publish-all, -P",
        "description": "Publish all exposed ports to random ports"
      },
      "t": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "u": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "v": {
        "representation": "--volume, -v",
        "description": "Bind mount a volume"
      },
      "w": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    },
    "longOptionDictionary": {
      "add-host": {
        "representation": "--add-host",
        "description": "Add a custom host-to-IP mapping (host:ip)"
      },
      "attach": {
        "representation": "--attach, -a",
        "description": "Attach to STDIN, STDOUT or STDERR"
      },
      "blkio-weight": {
        "representation": "--blkio-weight",
        "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)"
      },
      "blkio-weight-device": {
        "representation": "--blkio-weight-device",
        "description": "Block IO weight (relative device weight)"
      },
      "cap-add": {
        "representation": "--cap-add",
        "description": "Add Linux capabilities"
      },
      "cap-drop": {
        "representation": "--cap-drop",
        "description": "Drop Linux capabilities"
      },
      "cgroup-parent": {
        "representation": "--cgroup-parent",
        "description": "Optional parent cgroup for the container"
      },
      "cgroupns": {
        "representation": "--cgroupns",
        "description": "API 1.41+Cgroup namespace to use (host|private)\n'host':    Run the container in the Docker host's cgroup namespace\n'private': Run the container in its own private cgroup namespace\n'':        Use the cgroup namespace as configured by the\n           default-cgroupns-mode option on the daemon (default)"
      },
      "cidfile": {
        "representation": "--cidfile",
        "description": "Write the container ID to the file"
      },
      "cpu-count": {
        "representation": "--cpu-count",
        "description": "CPU count (Windows only)"
      },
      "cpu-percent": {
        "representation": "--cpu-percent",
        "description": "CPU percent (Windows only)"
      },
      "cpu-period": {
        "representation": "--cpu-period",
        "description": "Limit CPU CFS (Completely Fair Scheduler) period"
      },
      "cpu-quota": {
        "representation": "--cpu-quota",
        "description": "Limit CPU CFS (Completely Fair Scheduler) quota"
      },
      "cpu-rt-period": {
        "representation": "--cpu-rt-period",
        "description": "API 1.25+Limit CPU real-time period in microseconds"
      },
      "cpu-rt-runtime": {
        "representation": "--cpu-rt-runtime",
        "description": "API 1.25+Limit CPU real-time runtime in microseconds"
      },
      "cpu-shares": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "cpus": {
        "representation": "--cpus",
        "description": "API 1.25+Number of CPUs"
      },
      "cpuset-cpus": {
        "representation": "--cpuset-cpus",
        "description": "CPUs in which to allow execution (0-3, 0,1)"
      },
      "cpuset-mems": {
        "representation": "--cpuset-mems",
        "description": "MEMs in which to allow execution (0-3, 0,1)"
      },
      "device": {
        "representation": "--device",
        "description": "Add a host device to the container"
      },
      "device-cgroup-rule": {
        "representation": "--device-cgroup-rule",
        "description": "Add a rule to the cgroup allowed devices list"
      },
      "device-read-bps": {
        "representation": "--device-read-bps",
        "description": "Limit read rate (bytes per second) from a device"
      },
      "device-read-iops": {
        "representation": "--device-read-iops",
        "description": "Limit read rate (IO per second) from a device"
      },
      "device-write-bps": {
        "representation": "--device-write-bps",
        "description": "Limit write rate (bytes per second) to a device"
      },
      "device-write-iops": {
        "representation": "--device-write-iops",
        "description": "Limit write rate (IO per second) to a device"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image verification"
      },
      "dns": {
        "representation": "--dns",
        "description": "Set custom DNS servers"
      },
      "dns-opt": {
        "representation": "--dns-opt",
        "description": "Set DNS options"
      },
      "dns-option": {
        "representation": "--dns-option",
        "description": "Set DNS options"
      },
      "dns-search": {
        "representation": "--dns-search",
        "description": "Set custom DNS search domains"
      },
      "domainname": {
        "representation": "--domainname",
        "description": "Container NIS domain name"
      },
      "entrypoint": {
        "representation": "--entrypoint",
        "description": "Overwrite the default ENTRYPOINT of the image"
      },
      "env": {
        "representation": "--env, -e",
        "description": "Set environment variables"
      },
      "env-file": {
        "representation": "--env-file",
        "description": "Read in a file of environment variables"
      },
      "expose": {
        "representation": "--expose",
        "description": "Expose a port or a range of ports"
      },
      "gpus": {
        "representation": "--gpus",
        "description": "API 1.40+GPU devices to add to the container ('all' to pass all GPUs)"
      },
      "group-add": {
        "representation": "--group-add",
        "description": "Add additional groups to join"
      },
      "health-cmd": {
        "representation": "--health-cmd",
        "description": "Command to run to check health"
      },
      "health-interval": {
        "representation": "--health-interval",
        "description": "Time between running the check (ms|s|m|h) (default 0s)"
      },
      "health-retries": {
        "representation": "--health-retries",
        "description": "Consecutive failures needed to report unhealthy"
      },
      "health-start-period": {
        "representation": "--health-start-period",
        "description": "API 1.29+Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)"
      },
      "health-timeout": {
        "representation": "--health-timeout",
        "description": "Maximum time to allow one check to run (ms|s|m|h) (default 0s)"
      },
      "help": {
        "representation": "--help",
        "description": "Print usage"
      },
      "hostname": {
        "representation": "--hostname, -h",
        "description": "Container host name"
      },
      "init": {
        "representation": "--init",
        "description": "API 1.25+Run an init inside the container that forwards signals and reaps processes"
      },
      "interactive": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "io-maxbandwidth": {
        "representation": "--io-maxbandwidth",
        "description": "Maximum IO bandwidth limit for the system drive (Windows only)"
      },
      "io-maxiops": {
        "representation": "--io-maxiops",
        "description": "Maximum IOps limit for the system drive (Windows only)"
      },
      "ip": {
        "representation": "--ip",
        "description": "IPv4 address (e.g., 172.30.100.104)"
      },
      "ip6": {
        "representation": "--ip6",
        "description": "IPv6 address (e.g., 2001:db8::33)"
      },
      "ipc": {
        "representation": "--ipc",
        "description": "IPC mode to use"
      },
      "isolation": {
        "representation": "--isolation",
        "description": "Container isolation technology"
      },
      "kernel-memory": {
        "representation": "--kernel-memory",
        "description": "Kernel memory limit"
      },
      "label": {
        "representation": "--label, -l",
        "description": "Set meta data on a container"
      },
      "label-file": {
        "representation": "--label-file",
        "description": "Read in a line delimited file of labels"
      },
      "link": {
        "representation": "--link",
        "description": "Add link to another container"
      },
      "link-local-ip": {
        "representation": "--link-local-ip",
        "description": "Container IPv4/IPv6 link-local addresses"
      },
      "log-driver": {
        "representation": "--log-driver",
        "description": "Logging driver for the container"
      },
      "log-opt": {
        "representation": "--log-opt",
        "description": "Log driver options"
      },
      "mac-address": {
        "representation": "--mac-address",
        "description": "Container MAC address (e.g., 92:d0:c6:0a:29:33)"
      },
      "memory": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "memory-reservation": {
        "representation": "--memory-reservation",
        "description": "Memory soft limit"
      },
      "memory-swap": {
        "representation": "--memory-swap",
        "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap"
      },
      "memory-swappiness": {
        "representation": "--memory-swappiness",
        "description": "Tune container memory swappiness (0 to 100)"
      },
      "mount": {
        "representation": "--mount",
        "description": "Attach a filesystem mount to the container"
      },
      "name": {
        "representation": "--name",
        "description": "Assign a name to the container"
      },
      "net": {
        "representation": "--net",
        "description": "Connect a container to a network"
      },
      "net-alias": {
        "representation": "--net-alias",
        "description": "Add network-scoped alias for the container"
      },
      "network": {
        "representation": "--network",
        "description": "Connect a container to a network"
      },
      "network-alias": {
        "representation": "--network-alias",
        "description": "Add network-scoped alias for the container"
      },
      "no-healthcheck": {
        "representation": "--no-healthcheck",
        "description": "Disable any container-specified HEALTHCHECK"
      },
      "oom-kill-disable": {
        "representation": "--oom-kill-disable",
        "description": "Disable OOM Killer"
      },
      "oom-score-adj": {
        "representation": "--oom-score-adj",
        "description": "Tune host's OOM preferences (-1000 to 1000)"
      },
      "pid": {
        "representation": "--pid",
        "description": "PID namespace to use"
      },
      "pids-limit": {
        "representation": "--pids-limit",
        "description": "Tune container pids limit (set -1 for unlimited)"
      },
      "platform": {
        "representation": "--platform",
        "description": "API 1.32+Set platform if server is multi-platform capable"
      },
      "privileged": {
        "representation": "--privileged",
        "description": "Give extended privileges to this container"
      },
      "publish": {
        "representation": "--publish, -p",
        "description": "Publish a container's port(s) to the host"
      },
      "publish-all": {
        "representation": "--publish-all, -P",
        "description": "Publish all exposed ports to random ports"
      },
      "pull": {
        "representation": "--pull",
        "description": "Pull image before creating (\"always\"|\"missing\"|\"never\")"
      },
      "read-only": {
        "representation": "--read-only",
        "description": "Mount the container's root filesystem as read only"
      },
      "restart": {
        "representation": "--restart",
        "description": "Restart policy to apply when a container exits"
      },
      "rm": {
        "representation": "--rm",
        "description": "Automatically remove the container when it exits"
      },
      "runtime": {
        "representation": "--runtime",
        "description": "Runtime to use for this container"
      },
      "security-opt": {
        "representation": "--security-opt",
        "description": "Security Options"
      },
      "shm-size": {
        "representation": "--shm-size",
        "description": "Size of /dev/shm"
      },
      "stop-signal": {
        "representation": "--stop-signal",
        "description": "Signal to stop a container"
      },
      "stop-timeout": {
        "representation": "--stop-timeout",
        "description": "API 1.25+Timeout (in seconds) to stop a container"
      },
      "storage-opt": {
        "representation": "--storage-opt",
        "description": "Storage driver options for the container"
      },
      "sysctl": {
        "representation": "--sysctl",
        "description": "Sysctl options"
      },
      "tmpfs": {
        "representation": "--tmpfs",
        "description": "Mount a tmpfs directory"
      },
      "tty": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "ulimit": {
        "representation": "--ulimit",
        "description": "Ulimit options"
      },
      "user": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "userns": {
        "representation": "--userns",
        "description": "User namespace to use"
      },
      "uts": {
        "representation": "--uts",
        "description": "UTS namespace to use"
      },
      "volume": {
        "representation": "--volume, -v",
        "description": "Bind mount a volume"
      },
      "volume-driver": {
        "representation": "--volume-driver",
        "description": "Optional volume driver for the container"
      },
      "volumes-from": {
        "representation": "--volumes-from",
        "description": "Mount volumes from the specified container(s)"
      },
      "workdir": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    }
  },
  {
    "command": "docker container diff",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker container exec",
    "shortOptionDictionary": {
      "d": {
        "representation": "--detach, -d",
        "description": "Detached mode: run command in the background"
      },
      "e": {
        "representation": "--env, -e",
        "description": "API 1.25+Set environment variables"
      },
      "i": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "t": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "u": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "w": {
        "representation": "--workdir, -w",
        "description": "API 1.35+Working directory inside the container"
      }
    },
    "longOptionDictionary": {
      "detach": {
        "representation": "--detach, -d",
        "description": "Detached mode: run command in the background"
      },
      "detach-keys": {
        "representation": "--detach-keys",
        "description": "Override the key sequence for detaching a container"
      },
      "env": {
        "representation": "--env, -e",
        "description": "API 1.25+Set environment variables"
      },
      "env-file": {
        "representation": "--env-file",
        "description": "API 1.25+Read in a file of environment variables"
      },
      "interactive": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "privileged": {
        "representation": "--privileged",
        "description": "Give extended privileges to the command"
      },
      "tty": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "user": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "workdir": {
        "representation": "--workdir, -w",
        "description": "API 1.35+Working directory inside the container"
      }
    }
  },
  {
    "command": "docker container export",
    "shortOptionDictionary": {
      "o": {
        "representation": "--output, -o",
        "description": "Write to a file, instead of STDOUT"
      }
    },
    "longOptionDictionary": {
      "output": {
        "representation": "--output, -o",
        "description": "Write to a file, instead of STDOUT"
      }
    }
  },
  {
    "command": "docker container inspect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      },
      "s": {
        "representation": "--size, -s",
        "description": "Display total file sizes"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      },
      "size": {
        "representation": "--size, -s",
        "description": "Display total file sizes"
      }
    }
  },
  {
    "command": "docker container kill",
    "shortOptionDictionary": {
      "s": {
        "representation": "--signal, -s",
        "description": "Signal to send to the container"
      }
    },
    "longOptionDictionary": {
      "signal": {
        "representation": "--signal, -s",
        "description": "Signal to send to the container"
      }
    }
  },
  {
    "command": "docker container logs",
    "shortOptionDictionary": {
      "f": {
        "representation": "--follow, -f",
        "description": "Follow log output"
      },
      "n": {
        "representation": "--tail, -n",
        "description": "Number of lines to show from the end of the logs"
      },
      "t": {
        "representation": "--timestamps, -t",
        "description": "Show timestamps"
      }
    },
    "longOptionDictionary": {
      "details": {
        "representation": "--details",
        "description": "Show extra details provided to logs"
      },
      "follow": {
        "representation": "--follow, -f",
        "description": "Follow log output"
      },
      "since": {
        "representation": "--since",
        "description": "Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)"
      },
      "tail": {
        "representation": "--tail, -n",
        "description": "Number of lines to show from the end of the logs"
      },
      "timestamps": {
        "representation": "--timestamps, -t",
        "description": "Show timestamps"
      },
      "until": {
        "representation": "--until",
        "description": "API 1.35+Show logs before a timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)"
      }
    }
  },
  {
    "command": "docker container ls",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all, -a",
        "description": "Show all containers (default shows just running)"
      },
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "n": {
        "representation": "--last, -n",
        "description": "Show n last created containers (includes all states)"
      },
      "l": {
        "representation": "--latest, -l",
        "description": "Show the latest created container (includes all states)"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display container IDs"
      },
      "s": {
        "representation": "--size, -s",
        "description": "Display total file sizes"
      }
    },
    "longOptionDictionary": {
      "all": {
        "representation": "--all, -a",
        "description": "Show all containers (default shows just running)"
      },
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print containers using a Go template"
      },
      "last": {
        "representation": "--last, -n",
        "description": "Show n last created containers (includes all states)"
      },
      "latest": {
        "representation": "--latest, -l",
        "description": "Show the latest created container (includes all states)"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Don't truncate output"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display container IDs"
      },
      "size": {
        "representation": "--size, -s",
        "description": "Display total file sizes"
      }
    }
  },
  {
    "command": "docker container pause",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker container port",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker container prune",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter",
        "description": "Provide filter values (e.g. 'until=<timestamp>')"
      },
      "force": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      }
    }
  },
  {
    "command": "docker container rename",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker container restart",
    "shortOptionDictionary": {
      "t": {
        "representation": "--time, -t",
        "description": "Seconds to wait for stop before killing the container"
      }
    },
    "longOptionDictionary": {
      "time": {
        "representation": "--time, -t",
        "description": "Seconds to wait for stop before killing the container"
      }
    }
  },
  {
    "command": "docker container rm",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Force the removal of a running container (uses SIGKILL)"
      },
      "l": {
        "representation": "--link, -l",
        "description": "Remove the specified link"
      },
      "v": {
        "representation": "--volumes, -v",
        "description": "Remove anonymous volumes associated with the container"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Force the removal of a running container (uses SIGKILL)"
      },
      "link": {
        "representation": "--link, -l",
        "description": "Remove the specified link"
      },
      "volumes": {
        "representation": "--volumes, -v",
        "description": "Remove anonymous volumes associated with the container"
      }
    }
  },
  {
    "command": "docker container run",
    "shortOptionDictionary": {
      "a": {
        "representation": "--attach, -a",
        "description": "Attach to STDIN, STDOUT or STDERR"
      },
      "c": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "d": {
        "representation": "--detach, -d",
        "description": "Run container in background and print container ID"
      },
      "e": {
        "representation": "--env, -e",
        "description": "Set environment variables"
      },
      "h": {
        "representation": "--hostname, -h",
        "description": "Container host name"
      },
      "i": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "l": {
        "representation": "--label, -l",
        "description": "Set meta data on a container"
      },
      "m": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "p": {
        "representation": "--publish, -p",
        "description": "Publish a container's port(s) to the host"
      },
      "P": {
        "representation": "--publish-all, -P",
        "description": "Publish all exposed ports to random ports"
      },
      "t": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "u": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "v": {
        "representation": "--volume, -v",
        "description": "Bind mount a volume"
      },
      "w": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    },
    "longOptionDictionary": {
      "add-host": {
        "representation": "--add-host",
        "description": "Add a custom host-to-IP mapping (host:ip)"
      },
      "attach": {
        "representation": "--attach, -a",
        "description": "Attach to STDIN, STDOUT or STDERR"
      },
      "blkio-weight": {
        "representation": "--blkio-weight",
        "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)"
      },
      "blkio-weight-device": {
        "representation": "--blkio-weight-device",
        "description": "Block IO weight (relative device weight)"
      },
      "cap-add": {
        "representation": "--cap-add",
        "description": "Add Linux capabilities"
      },
      "cap-drop": {
        "representation": "--cap-drop",
        "description": "Drop Linux capabilities"
      },
      "cgroup-parent": {
        "representation": "--cgroup-parent",
        "description": "Optional parent cgroup for the container"
      },
      "cgroupns": {
        "representation": "--cgroupns",
        "description": "API 1.41+Cgroup namespace to use (host|private)\n'host':    Run the container in the Docker host's cgroup namespace\n'private': Run the container in its own private cgroup namespace\n'':        Use the cgroup namespace as configured by the\n           default-cgroupns-mode option on the daemon (default)"
      },
      "cidfile": {
        "representation": "--cidfile",
        "description": "Write the container ID to the file"
      },
      "cpu-count": {
        "representation": "--cpu-count",
        "description": "CPU count (Windows only)"
      },
      "cpu-percent": {
        "representation": "--cpu-percent",
        "description": "CPU percent (Windows only)"
      },
      "cpu-period": {
        "representation": "--cpu-period",
        "description": "Limit CPU CFS (Completely Fair Scheduler) period"
      },
      "cpu-quota": {
        "representation": "--cpu-quota",
        "description": "Limit CPU CFS (Completely Fair Scheduler) quota"
      },
      "cpu-rt-period": {
        "representation": "--cpu-rt-period",
        "description": "API 1.25+Limit CPU real-time period in microseconds"
      },
      "cpu-rt-runtime": {
        "representation": "--cpu-rt-runtime",
        "description": "API 1.25+Limit CPU real-time runtime in microseconds"
      },
      "cpu-shares": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "cpus": {
        "representation": "--cpus",
        "description": "API 1.25+Number of CPUs"
      },
      "cpuset-cpus": {
        "representation": "--cpuset-cpus",
        "description": "CPUs in which to allow execution (0-3, 0,1)"
      },
      "cpuset-mems": {
        "representation": "--cpuset-mems",
        "description": "MEMs in which to allow execution (0-3, 0,1)"
      },
      "detach": {
        "representation": "--detach, -d",
        "description": "Run container in background and print container ID"
      },
      "detach-keys": {
        "representation": "--detach-keys",
        "description": "Override the key sequence for detaching a container"
      },
      "device": {
        "representation": "--device",
        "description": "Add a host device to the container"
      },
      "device-cgroup-rule": {
        "representation": "--device-cgroup-rule",
        "description": "Add a rule to the cgroup allowed devices list"
      },
      "device-read-bps": {
        "representation": "--device-read-bps",
        "description": "Limit read rate (bytes per second) from a device"
      },
      "device-read-iops": {
        "representation": "--device-read-iops",
        "description": "Limit read rate (IO per second) from a device"
      },
      "device-write-bps": {
        "representation": "--device-write-bps",
        "description": "Limit write rate (bytes per second) to a device"
      },
      "device-write-iops": {
        "representation": "--device-write-iops",
        "description": "Limit write rate (IO per second) to a device"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image verification"
      },
      "dns": {
        "representation": "--dns",
        "description": "Set custom DNS servers"
      },
      "dns-opt": {
        "representation": "--dns-opt",
        "description": "Set DNS options"
      },
      "dns-option": {
        "representation": "--dns-option",
        "description": "Set DNS options"
      },
      "dns-search": {
        "representation": "--dns-search",
        "description": "Set custom DNS search domains"
      },
      "domainname": {
        "representation": "--domainname",
        "description": "Container NIS domain name"
      },
      "entrypoint": {
        "representation": "--entrypoint",
        "description": "Overwrite the default ENTRYPOINT of the image"
      },
      "env": {
        "representation": "--env, -e",
        "description": "Set environment variables"
      },
      "env-file": {
        "representation": "--env-file",
        "description": "Read in a file of environment variables"
      },
      "expose": {
        "representation": "--expose",
        "description": "Expose a port or a range of ports"
      },
      "gpus": {
        "representation": "--gpus",
        "description": "API 1.40+GPU devices to add to the container ('all' to pass all GPUs)"
      },
      "group-add": {
        "representation": "--group-add",
        "description": "Add additional groups to join"
      },
      "health-cmd": {
        "representation": "--health-cmd",
        "description": "Command to run to check health"
      },
      "health-interval": {
        "representation": "--health-interval",
        "description": "Time between running the check (ms|s|m|h) (default 0s)"
      },
      "health-retries": {
        "representation": "--health-retries",
        "description": "Consecutive failures needed to report unhealthy"
      },
      "health-start-period": {
        "representation": "--health-start-period",
        "description": "API 1.29+Start period for the container to initialize before starting health-retries countdown (ms|s|m|h) (default 0s)"
      },
      "health-timeout": {
        "representation": "--health-timeout",
        "description": "Maximum time to allow one check to run (ms|s|m|h) (default 0s)"
      },
      "help": {
        "representation": "--help",
        "description": "Print usage"
      },
      "hostname": {
        "representation": "--hostname, -h",
        "description": "Container host name"
      },
      "init": {
        "representation": "--init",
        "description": "API 1.25+Run an init inside the container that forwards signals and reaps processes"
      },
      "interactive": {
        "representation": "--interactive, -i",
        "description": "Keep STDIN open even if not attached"
      },
      "io-maxbandwidth": {
        "representation": "--io-maxbandwidth",
        "description": "Maximum IO bandwidth limit for the system drive (Windows only)"
      },
      "io-maxiops": {
        "representation": "--io-maxiops",
        "description": "Maximum IOps limit for the system drive (Windows only)"
      },
      "ip": {
        "representation": "--ip",
        "description": "IPv4 address (e.g., 172.30.100.104)"
      },
      "ip6": {
        "representation": "--ip6",
        "description": "IPv6 address (e.g., 2001:db8::33)"
      },
      "ipc": {
        "representation": "--ipc",
        "description": "IPC mode to use"
      },
      "isolation": {
        "representation": "--isolation",
        "description": "Container isolation technology"
      },
      "kernel-memory": {
        "representation": "--kernel-memory",
        "description": "Kernel memory limit"
      },
      "label": {
        "representation": "--label, -l",
        "description": "Set meta data on a container"
      },
      "label-file": {
        "representation": "--label-file",
        "description": "Read in a line delimited file of labels"
      },
      "link": {
        "representation": "--link",
        "description": "Add link to another container"
      },
      "link-local-ip": {
        "representation": "--link-local-ip",
        "description": "Container IPv4/IPv6 link-local addresses"
      },
      "log-driver": {
        "representation": "--log-driver",
        "description": "Logging driver for the container"
      },
      "log-opt": {
        "representation": "--log-opt",
        "description": "Log driver options"
      },
      "mac-address": {
        "representation": "--mac-address",
        "description": "Container MAC address (e.g., 92:d0:c6:0a:29:33)"
      },
      "memory": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "memory-reservation": {
        "representation": "--memory-reservation",
        "description": "Memory soft limit"
      },
      "memory-swap": {
        "representation": "--memory-swap",
        "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap"
      },
      "memory-swappiness": {
        "representation": "--memory-swappiness",
        "description": "Tune container memory swappiness (0 to 100)"
      },
      "mount": {
        "representation": "--mount",
        "description": "Attach a filesystem mount to the container"
      },
      "name": {
        "representation": "--name",
        "description": "Assign a name to the container"
      },
      "net": {
        "representation": "--net",
        "description": "Connect a container to a network"
      },
      "net-alias": {
        "representation": "--net-alias",
        "description": "Add network-scoped alias for the container"
      },
      "network": {
        "representation": "--network",
        "description": "Connect a container to a network"
      },
      "network-alias": {
        "representation": "--network-alias",
        "description": "Add network-scoped alias for the container"
      },
      "no-healthcheck": {
        "representation": "--no-healthcheck",
        "description": "Disable any container-specified HEALTHCHECK"
      },
      "oom-kill-disable": {
        "representation": "--oom-kill-disable",
        "description": "Disable OOM Killer"
      },
      "oom-score-adj": {
        "representation": "--oom-score-adj",
        "description": "Tune host's OOM preferences (-1000 to 1000)"
      },
      "pid": {
        "representation": "--pid",
        "description": "PID namespace to use"
      },
      "pids-limit": {
        "representation": "--pids-limit",
        "description": "Tune container pids limit (set -1 for unlimited)"
      },
      "platform": {
        "representation": "--platform",
        "description": "API 1.32+Set platform if server is multi-platform capable"
      },
      "privileged": {
        "representation": "--privileged",
        "description": "Give extended privileges to this container"
      },
      "publish": {
        "representation": "--publish, -p",
        "description": "Publish a container's port(s) to the host"
      },
      "publish-all": {
        "representation": "--publish-all, -P",
        "description": "Publish all exposed ports to random ports"
      },
      "pull": {
        "representation": "--pull",
        "description": "Pull image before running (\"always\"|\"missing\"|\"never\")"
      },
      "read-only": {
        "representation": "--read-only",
        "description": "Mount the container's root filesystem as read only"
      },
      "restart": {
        "representation": "--restart",
        "description": "Restart policy to apply when a container exits"
      },
      "rm": {
        "representation": "--rm",
        "description": "Automatically remove the container when it exits"
      },
      "runtime": {
        "representation": "--runtime",
        "description": "Runtime to use for this container"
      },
      "security-opt": {
        "representation": "--security-opt",
        "description": "Security Options"
      },
      "shm-size": {
        "representation": "--shm-size",
        "description": "Size of /dev/shm"
      },
      "sig-proxy": {
        "representation": "--sig-proxy",
        "description": "Proxy received signals to the process"
      },
      "stop-signal": {
        "representation": "--stop-signal",
        "description": "Signal to stop a container"
      },
      "stop-timeout": {
        "representation": "--stop-timeout",
        "description": "API 1.25+Timeout (in seconds) to stop a container"
      },
      "storage-opt": {
        "representation": "--storage-opt",
        "description": "Storage driver options for the container"
      },
      "sysctl": {
        "representation": "--sysctl",
        "description": "Sysctl options"
      },
      "tmpfs": {
        "representation": "--tmpfs",
        "description": "Mount a tmpfs directory"
      },
      "tty": {
        "representation": "--tty, -t",
        "description": "Allocate a pseudo-TTY"
      },
      "ulimit": {
        "representation": "--ulimit",
        "description": "Ulimit options"
      },
      "user": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "userns": {
        "representation": "--userns",
        "description": "User namespace to use"
      },
      "uts": {
        "representation": "--uts",
        "description": "UTS namespace to use"
      },
      "volume": {
        "representation": "--volume, -v",
        "description": "Bind mount a volume"
      },
      "volume-driver": {
        "representation": "--volume-driver",
        "description": "Optional volume driver for the container"
      },
      "volumes-from": {
        "representation": "--volumes-from",
        "description": "Mount volumes from the specified container(s)"
      },
      "workdir": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    }
  },
  {
    "command": "docker container start",
    "shortOptionDictionary": {
      "a": {
        "representation": "--attach, -a",
        "description": "Attach STDOUT/STDERR and forward signals"
      },
      "i": {
        "representation": "--interactive, -i",
        "description": "Attach container's STDIN"
      }
    },
    "longOptionDictionary": {
      "attach": {
        "representation": "--attach, -a",
        "description": "Attach STDOUT/STDERR and forward signals"
      },
      "checkpoint": {
        "representation": "--checkpoint",
        "description": "experimental (daemon)Restore from this checkpoint"
      },
      "checkpoint-dir": {
        "representation": "--checkpoint-dir",
        "description": "experimental (daemon)Use a custom checkpoint storage directory"
      },
      "detach-keys": {
        "representation": "--detach-keys",
        "description": "Override the key sequence for detaching a container"
      },
      "interactive": {
        "representation": "--interactive, -i",
        "description": "Attach container's STDIN"
      }
    }
  },
  {
    "command": "docker container stats",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all, -a",
        "description": "Show all containers (default shows just running)"
      }
    },
    "longOptionDictionary": {
      "all": {
        "representation": "--all, -a",
        "description": "Show all containers (default shows just running)"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print images using a Go template"
      },
      "no-stream": {
        "representation": "--no-stream",
        "description": "Disable streaming stats and only pull the first result"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Do not truncate output"
      }
    }
  },
  {
    "command": "docker container stop",
    "shortOptionDictionary": {
      "t": {
        "representation": "--time, -t",
        "description": "Seconds to wait for stop before killing it"
      }
    },
    "longOptionDictionary": {
      "time": {
        "representation": "--time, -t",
        "description": "Seconds to wait for stop before killing it"
      }
    }
  },
  {
    "command": "docker container top",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker container unpause",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker container update",
    "shortOptionDictionary": {
      "c": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "m": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      }
    },
    "longOptionDictionary": {
      "blkio-weight": {
        "representation": "--blkio-weight",
        "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable (default 0)"
      },
      "cpu-period": {
        "representation": "--cpu-period",
        "description": "Limit CPU CFS (Completely Fair Scheduler) period"
      },
      "cpu-quota": {
        "representation": "--cpu-quota",
        "description": "Limit CPU CFS (Completely Fair Scheduler) quota"
      },
      "cpu-rt-period": {
        "representation": "--cpu-rt-period",
        "description": "API 1.25+Limit the CPU real-time period in microseconds"
      },
      "cpu-rt-runtime": {
        "representation": "--cpu-rt-runtime",
        "description": "API 1.25+Limit the CPU real-time runtime in microseconds"
      },
      "cpu-shares": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "cpus": {
        "representation": "--cpus",
        "description": "API 1.29+Number of CPUs"
      },
      "cpuset-cpus": {
        "representation": "--cpuset-cpus",
        "description": "CPUs in which to allow execution (0-3, 0,1)"
      },
      "cpuset-mems": {
        "representation": "--cpuset-mems",
        "description": "MEMs in which to allow execution (0-3, 0,1)"
      },
      "kernel-memory": {
        "representation": "--kernel-memory",
        "description": "Kernel memory limit"
      },
      "memory": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "memory-reservation": {
        "representation": "--memory-reservation",
        "description": "Memory soft limit"
      },
      "memory-swap": {
        "representation": "--memory-swap",
        "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap"
      },
      "pids-limit": {
        "representation": "--pids-limit",
        "description": "API 1.40+Tune container pids limit (set -1 for unlimited)"
      },
      "restart": {
        "representation": "--restart",
        "description": "Restart policy to apply when a container exits"
      }
    }
  },
  {
    "command": "docker container wait",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker context create",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "default-stack-orchestrator": {
        "representation": "--default-stack-orchestrator",
        "description": "deprecatedDefault orchestrator for stack operations to use with this context (swarm|kubernetes|all)"
      },
      "description": {
        "representation": "--description",
        "description": "Description of the context"
      },
      "docker": {
        "representation": "--docker",
        "description": "set the docker endpoint"
      },
      "from": {
        "representation": "--from",
        "description": "create context from a named context"
      },
      "kubernetes": {
        "representation": "--kubernetes",
        "description": "deprecatedKubernetesset the kubernetes endpoint"
      }
    }
  },
  {
    "command": "docker context export",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "kubeconfig": {
        "representation": "--kubeconfig",
        "description": "deprecatedKubernetesExport as a kubeconfig file"
      }
    }
  },
  {
    "command": "docker context import",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker context inspect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    }
  },
  {
    "command": "docker context ls",
    "shortOptionDictionary": {
      "q": {
        "representation": "--quiet, -q",
        "description": "Only show context names"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format",
        "description": "Pretty-print contexts using a Go template"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only show context names"
      }
    }
  },
  {
    "command": "docker context rm",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Force the removal of a context in use"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Force the removal of a context in use"
      }
    }
  },
  {
    "command": "docker context update",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "default-stack-orchestrator": {
        "representation": "--default-stack-orchestrator",
        "description": "deprecatedDefault orchestrator for stack operations to use with this context (swarm|kubernetes|all)"
      },
      "description": {
        "representation": "--description",
        "description": "Description of the context"
      },
      "docker": {
        "representation": "--docker",
        "description": "set the docker endpoint"
      },
      "kubernetes": {
        "representation": "--kubernetes",
        "description": "deprecatedKubernetesset the kubernetes endpoint"
      }
    }
  },
  {
    "command": "docker context use",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker image build",
    "shortOptionDictionary": {
      "c": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "f": {
        "representation": "--file, -f",
        "description": "Name of the Dockerfile (Default is 'PATH/Dockerfile')"
      },
      "m": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "o": {
        "representation": "--output, -o",
        "description": "API 1.40+Output destination (format: type=local,dest=path)"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress the build output and print image ID on success"
      },
      "t": {
        "representation": "--tag, -t",
        "description": "Name and optionally a tag in the 'name:tag' format"
      }
    },
    "longOptionDictionary": {
      "add-host": {
        "representation": "--add-host",
        "description": "Add a custom host-to-IP mapping (host:ip)"
      },
      "build-arg": {
        "representation": "--build-arg",
        "description": "Set build-time variables"
      },
      "cache-from": {
        "representation": "--cache-from",
        "description": "Images to consider as cache sources"
      },
      "cgroup-parent": {
        "representation": "--cgroup-parent",
        "description": "Optional parent cgroup for the container"
      },
      "compress": {
        "representation": "--compress",
        "description": "Compress the build context using gzip"
      },
      "cpu-period": {
        "representation": "--cpu-period",
        "description": "Limit the CPU CFS (Completely Fair Scheduler) period"
      },
      "cpu-quota": {
        "representation": "--cpu-quota",
        "description": "Limit the CPU CFS (Completely Fair Scheduler) quota"
      },
      "cpu-shares": {
        "representation": "--cpu-shares, -c",
        "description": "CPU shares (relative weight)"
      },
      "cpuset-cpus": {
        "representation": "--cpuset-cpus",
        "description": "CPUs in which to allow execution (0-3, 0,1)"
      },
      "cpuset-mems": {
        "representation": "--cpuset-mems",
        "description": "MEMs in which to allow execution (0-3, 0,1)"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image verification"
      },
      "file": {
        "representation": "--file, -f",
        "description": "Name of the Dockerfile (Default is 'PATH/Dockerfile')"
      },
      "force-rm": {
        "representation": "--force-rm",
        "description": "Always remove intermediate containers"
      },
      "iidfile": {
        "representation": "--iidfile",
        "description": "Write the image ID to the file"
      },
      "isolation": {
        "representation": "--isolation",
        "description": "Container isolation technology"
      },
      "label": {
        "representation": "--label",
        "description": "Set metadata for an image"
      },
      "memory": {
        "representation": "--memory, -m",
        "description": "Memory limit"
      },
      "memory-swap": {
        "representation": "--memory-swap",
        "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap"
      },
      "network": {
        "representation": "--network",
        "description": "API 1.25+Set the networking mode for the RUN instructions during build"
      },
      "no-cache": {
        "representation": "--no-cache",
        "description": "Do not use cache when building the image"
      },
      "output": {
        "representation": "--output, -o",
        "description": "API 1.40+Output destination (format: type=local,dest=path)"
      },
      "platform": {
        "representation": "--platform",
        "description": "API 1.38+Set platform if server is multi-platform capable"
      },
      "progress": {
        "representation": "--progress",
        "description": "Set type of progress output (auto, plain, tty). Use plain to show container output"
      },
      "pull": {
        "representation": "--pull",
        "description": "Always attempt to pull a newer version of the image"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress the build output and print image ID on success"
      },
      "rm": {
        "representation": "--rm",
        "description": "Remove intermediate containers after a successful build"
      },
      "secret": {
        "representation": "--secret",
        "description": "API 1.39+Secret file to expose to the build (only if BuildKit enabled): id=mysecret,src=/local/secret"
      },
      "security-opt": {
        "representation": "--security-opt",
        "description": "Security options"
      },
      "shm-size": {
        "representation": "--shm-size",
        "description": "Size of /dev/shm"
      },
      "squash": {
        "representation": "--squash",
        "description": "experimental (daemon)API 1.25+Squash newly built layers into a single new layer"
      },
      "ssh": {
        "representation": "--ssh",
        "description": "API 1.39+SSH agent socket or keys to expose to the build (only if BuildKit enabled) (format: default|<id>[=<socket>|<key>[,<key>]])"
      },
      "stream": {
        "representation": "--stream",
        "description": "Stream attaches to server to negotiate build context"
      },
      "tag": {
        "representation": "--tag, -t",
        "description": "Name and optionally a tag in the 'name:tag' format"
      },
      "target": {
        "representation": "--target",
        "description": "Set the target build stage to build."
      },
      "ulimit": {
        "representation": "--ulimit",
        "description": "Ulimit options"
      }
    }
  },
  {
    "command": "docker image history",
    "shortOptionDictionary": {
      "H": {
        "representation": "--human, -H",
        "description": "Print sizes and dates in human readable format"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only show image IDs"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format",
        "description": "Pretty-print images using a Go template"
      },
      "human": {
        "representation": "--human, -H",
        "description": "Print sizes and dates in human readable format"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Don't truncate output"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only show image IDs"
      }
    }
  },
  {
    "command": "docker image import",
    "shortOptionDictionary": {
      "c": {
        "representation": "--change, -c",
        "description": "Apply Dockerfile instruction to the created image"
      },
      "m": {
        "representation": "--message, -m",
        "description": "Set commit message for imported image"
      }
    },
    "longOptionDictionary": {
      "change": {
        "representation": "--change, -c",
        "description": "Apply Dockerfile instruction to the created image"
      },
      "message": {
        "representation": "--message, -m",
        "description": "Set commit message for imported image"
      },
      "platform": {
        "representation": "--platform",
        "description": "API 1.32+Set platform if server is multi-platform capable"
      }
    }
  },
  {
    "command": "docker image inspect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    }
  },
  {
    "command": "docker image load",
    "shortOptionDictionary": {
      "i": {
        "representation": "--input, -i",
        "description": "Read from tar archive file, instead of STDIN"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress the load output"
      }
    },
    "longOptionDictionary": {
      "input": {
        "representation": "--input, -i",
        "description": "Read from tar archive file, instead of STDIN"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress the load output"
      }
    }
  },
  {
    "command": "docker image ls",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all, -a",
        "description": "Show all images (default hides intermediate images)"
      },
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only show image IDs"
      }
    },
    "longOptionDictionary": {
      "all": {
        "representation": "--all, -a",
        "description": "Show all images (default hides intermediate images)"
      },
      "digests": {
        "representation": "--digests",
        "description": "Show digests"
      },
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print images using a Go template"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Don't truncate output"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only show image IDs"
      }
    }
  },
  {
    "command": "docker image prune",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all, -a",
        "description": "Remove all unused images, not just dangling ones"
      },
      "f": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      }
    },
    "longOptionDictionary": {
      "all": {
        "representation": "--all, -a",
        "description": "Remove all unused images, not just dangling ones"
      },
      "filter": {
        "representation": "--filter",
        "description": "Provide filter values (e.g. 'until=<timestamp>')"
      },
      "force": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      }
    }
  },
  {
    "command": "docker image pull",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all-tags, -a",
        "description": "Download all tagged images in the repository"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress verbose output"
      }
    },
    "longOptionDictionary": {
      "all-tags": {
        "representation": "--all-tags, -a",
        "description": "Download all tagged images in the repository"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image verification"
      },
      "platform": {
        "representation": "--platform",
        "description": "API 1.32+Set platform if server is multi-platform capable"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress verbose output"
      }
    }
  },
  {
    "command": "docker image push",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all-tags, -a",
        "description": "Push all tagged images in the repository"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress verbose output"
      }
    },
    "longOptionDictionary": {
      "all-tags": {
        "representation": "--all-tags, -a",
        "description": "Push all tagged images in the repository"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image signing"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress verbose output"
      }
    }
  },
  {
    "command": "docker image rm",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Force removal of the image"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Force removal of the image"
      },
      "no-prune": {
        "representation": "--no-prune",
        "description": "Do not delete untagged parents"
      }
    }
  },
  {
    "command": "docker image save",
    "shortOptionDictionary": {
      "o": {
        "representation": "--output, -o",
        "description": "Write to a file, instead of STDOUT"
      }
    },
    "longOptionDictionary": {
      "output": {
        "representation": "--output, -o",
        "description": "Write to a file, instead of STDOUT"
      }
    }
  },
  {
    "command": "docker image tag",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker manifest annotate",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "arch": {
        "representation": "--arch",
        "description": "Set architecture"
      },
      "os": {
        "representation": "--os",
        "description": "Set operating system"
      },
      "os-features": {
        "representation": "--os-features",
        "description": "Set operating system feature"
      },
      "os-version": {
        "representation": "--os-version",
        "description": "Set operating system version"
      },
      "variant": {
        "representation": "--variant",
        "description": "Set architecture variant"
      }
    }
  },
  {
    "command": "docker manifest create",
    "shortOptionDictionary": {
      "a": {
        "representation": "--amend, -a",
        "description": "Amend an existing manifest list"
      }
    },
    "longOptionDictionary": {
      "amend": {
        "representation": "--amend, -a",
        "description": "Amend an existing manifest list"
      },
      "insecure": {
        "representation": "--insecure",
        "description": "Allow communication with an insecure registry"
      }
    }
  },
  {
    "command": "docker manifest inspect",
    "shortOptionDictionary": {
      "v": {
        "representation": "--verbose, -v",
        "description": "Output additional info including layers and platform"
      }
    },
    "longOptionDictionary": {
      "insecure": {
        "representation": "--insecure",
        "description": "Allow communication with an insecure registry"
      },
      "verbose": {
        "representation": "--verbose, -v",
        "description": "Output additional info including layers and platform"
      }
    }
  },
  {
    "command": "docker manifest push",
    "shortOptionDictionary": {
      "p": {
        "representation": "--purge, -p",
        "description": "Remove the local manifest list after push"
      }
    },
    "longOptionDictionary": {
      "insecure": {
        "representation": "--insecure",
        "description": "Allow push to an insecure registry"
      },
      "purge": {
        "representation": "--purge, -p",
        "description": "Remove the local manifest list after push"
      }
    }
  },
  {
    "command": "docker manifest rm",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker network connect",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "alias": {
        "representation": "--alias",
        "description": "Add network-scoped alias for the container"
      },
      "driver-opt": {
        "representation": "--driver-opt",
        "description": "driver options for the network"
      },
      "ip": {
        "representation": "--ip",
        "description": "IPv4 address (e.g., 172.30.100.104)"
      },
      "ip6": {
        "representation": "--ip6",
        "description": "IPv6 address (e.g., 2001:db8::33)"
      },
      "link": {
        "representation": "--link",
        "description": "Add link to another container"
      },
      "link-local-ip": {
        "representation": "--link-local-ip",
        "description": "Add a link-local address for the container"
      }
    }
  },
  {
    "command": "docker network create",
    "shortOptionDictionary": {
      "d": {
        "representation": "--driver, -d",
        "description": "Driver to manage the Network"
      },
      "o": {
        "representation": "--opt, -o",
        "description": "Set driver specific options"
      }
    },
    "longOptionDictionary": {
      "attachable": {
        "representation": "--attachable",
        "description": "API 1.25+Enable manual container attachment"
      },
      "aux-address": {
        "representation": "--aux-address",
        "description": "Auxiliary IPv4 or IPv6 addresses used by Network driver"
      },
      "config-from": {
        "representation": "--config-from",
        "description": "API 1.30+The network from which to copy the configuration"
      },
      "config-only": {
        "representation": "--config-only",
        "description": "API 1.30+Create a configuration only network"
      },
      "driver": {
        "representation": "--driver, -d",
        "description": "Driver to manage the Network"
      },
      "gateway": {
        "representation": "--gateway",
        "description": "IPv4 or IPv6 Gateway for the master subnet"
      },
      "ingress": {
        "representation": "--ingress",
        "description": "API 1.29+Create swarm routing-mesh network"
      },
      "internal": {
        "representation": "--internal",
        "description": "Restrict external access to the network"
      },
      "ip-range": {
        "representation": "--ip-range",
        "description": "Allocate IPs from a range"
      },
      "ipam-driver": {
        "representation": "--ipam-driver",
        "description": "IP Address Management Driver"
      },
      "ipam-opt": {
        "representation": "--ipam-opt",
        "description": "Set IPAM driver specific options"
      },
      "ipv6": {
        "representation": "--ipv6",
        "description": "Enable IPv6 networking"
      },
      "label": {
        "representation": "--label",
        "description": "Set metadata on a network"
      },
      "opt": {
        "representation": "--opt, -o",
        "description": "Set driver specific options"
      },
      "scope": {
        "representation": "--scope",
        "description": "API 1.30+Control the network's scope"
      },
      "subnet": {
        "representation": "--subnet",
        "description": "Subnet for network"
      }
    }
  },
  {
    "command": "docker network disconnect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Force the container to disconnect from a network"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Force the container to disconnect from a network"
      }
    }
  },
  {
    "command": "docker network inspect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      },
      "v": {
        "representation": "--verbose, -v",
        "description": "Verbose output for diagnostics"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      },
      "verbose": {
        "representation": "--verbose, -v",
        "description": "Verbose output for diagnostics"
      }
    }
  },
  {
    "command": "docker network ls",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Provide filter values (e.g. 'driver=bridge')"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display network IDs"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Provide filter values (e.g. 'driver=bridge')"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print networks using a Go template"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Do not truncate the output"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display network IDs"
      }
    }
  },
  {
    "command": "docker network prune",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter",
        "description": "Provide filter values (e.g. 'until=<timestamp>')"
      },
      "force": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      }
    }
  },
  {
    "command": "docker network rm",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker node demote",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker node inspect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      },
      "pretty": {
        "representation": "--pretty",
        "description": "Print the information in a human friendly format"
      }
    }
  },
  {
    "command": "docker node ls",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display IDs"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print nodes using a Go template"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display IDs"
      }
    }
  },
  {
    "command": "docker node promote",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker node ps",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display task IDs"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print tasks using a Go template"
      },
      "no-resolve": {
        "representation": "--no-resolve",
        "description": "Do not map IDs to Names"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Do not truncate output"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display task IDs"
      }
    }
  },
  {
    "command": "docker node rm",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Force remove a node from the swarm"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Force remove a node from the swarm"
      }
    }
  },
  {
    "command": "docker node update",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "availability": {
        "representation": "--availability",
        "description": "Availability of the node (\"active\"|\"pause\"|\"drain\")"
      },
      "label-add": {
        "representation": "--label-add",
        "description": "Add or update a node label (key=value)"
      },
      "label-rm": {
        "representation": "--label-rm",
        "description": "Remove a node label if exists"
      },
      "role": {
        "representation": "--role",
        "description": "Role of the node (\"worker\"|\"manager\")"
      }
    }
  },
  {
    "command": "docker plugin create",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "compress": {
        "representation": "--compress",
        "description": "Compress the context using gzip"
      }
    }
  },
  {
    "command": "docker plugin disable",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Force the disable of an active plugin"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Force the disable of an active plugin"
      }
    }
  },
  {
    "command": "docker plugin enable",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "timeout": {
        "representation": "--timeout",
        "description": "HTTP client timeout (in seconds)"
      }
    }
  },
  {
    "command": "docker plugin inspect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    }
  },
  {
    "command": "docker plugin install",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "alias": {
        "representation": "--alias",
        "description": "Local name for plugin"
      },
      "disable": {
        "representation": "--disable",
        "description": "Do not enable the plugin on install"
      },
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image verification"
      },
      "grant-all-permissions": {
        "representation": "--grant-all-permissions",
        "description": "Grant all permissions necessary to run the plugin"
      }
    }
  },
  {
    "command": "docker plugin ls",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Provide filter values (e.g. 'enabled=true')"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display plugin IDs"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Provide filter values (e.g. 'enabled=true')"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print plugins using a Go template"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Don't truncate output"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display plugin IDs"
      }
    }
  },
  {
    "command": "docker plugin push",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image signing"
      }
    }
  },
  {
    "command": "docker plugin rm",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Force the removal of an active plugin"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Force the removal of an active plugin"
      }
    }
  },
  {
    "command": "docker plugin set",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker plugin upgrade",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "disable-content-trust": {
        "representation": "--disable-content-trust",
        "description": "Skip image verification"
      },
      "grant-all-permissions": {
        "representation": "--grant-all-permissions",
        "description": "Grant all permissions necessary to run the plugin"
      },
      "skip-remote-check": {
        "representation": "--skip-remote-check",
        "description": "Do not check if specified remote plugin matches existing plugin image"
      }
    }
  },
  {
    "command": "docker secret create",
    "shortOptionDictionary": {
      "d": {
        "representation": "--driver, -d",
        "description": "API 1.31+Secret driver"
      },
      "l": {
        "representation": "--label, -l",
        "description": "Secret labels"
      }
    },
    "longOptionDictionary": {
      "driver": {
        "representation": "--driver, -d",
        "description": "API 1.31+Secret driver"
      },
      "label": {
        "representation": "--label, -l",
        "description": "Secret labels"
      },
      "template-driver": {
        "representation": "--template-driver",
        "description": "API 1.37+Template driver"
      }
    }
  },
  {
    "command": "docker secret inspect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      },
      "pretty": {
        "representation": "--pretty",
        "description": "Print the information in a human friendly format"
      }
    }
  },
  {
    "command": "docker secret ls",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display IDs"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print secrets using a Go template"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display IDs"
      }
    }
  },
  {
    "command": "docker secret rm",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker service create",
    "shortOptionDictionary": {
      "d": {
        "representation": "--detach, -d",
        "description": "API 1.29+Exit immediately instead of waiting for the service to converge"
      },
      "e": {
        "representation": "--env, -e",
        "description": "Set environment variables"
      },
      "l": {
        "representation": "--label, -l",
        "description": "Service labels"
      },
      "p": {
        "representation": "--publish, -p",
        "description": "Publish a port as a node port"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress progress output"
      },
      "t": {
        "representation": "--tty, -t",
        "description": "API 1.25+Allocate a pseudo-TTY"
      },
      "u": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "w": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    },
    "longOptionDictionary": {
      "cap-add": {
        "representation": "--cap-add",
        "description": "API 1.41+Add Linux capabilities"
      },
      "cap-drop": {
        "representation": "--cap-drop",
        "description": "API 1.41+Drop Linux capabilities"
      },
      "config": {
        "representation": "--config",
        "description": "API 1.30+Specify configurations to expose to the service"
      },
      "constraint": {
        "representation": "--constraint",
        "description": "Placement constraints"
      },
      "container-label": {
        "representation": "--container-label",
        "description": "Container labels"
      },
      "credential-spec": {
        "representation": "--credential-spec",
        "description": "API 1.29+Credential spec for managed service account (Windows only)"
      },
      "detach": {
        "representation": "--detach, -d",
        "description": "API 1.29+Exit immediately instead of waiting for the service to converge"
      },
      "dns": {
        "representation": "--dns",
        "description": "API 1.25+Set custom DNS servers"
      },
      "dns-option": {
        "representation": "--dns-option",
        "description": "API 1.25+Set DNS options"
      },
      "dns-search": {
        "representation": "--dns-search",
        "description": "API 1.25+Set custom DNS search domains"
      },
      "endpoint-mode": {
        "representation": "--endpoint-mode",
        "description": "Endpoint mode (vip or dnsrr)"
      },
      "entrypoint": {
        "representation": "--entrypoint",
        "description": "Overwrite the default ENTRYPOINT of the image"
      },
      "env": {
        "representation": "--env, -e",
        "description": "Set environment variables"
      },
      "env-file": {
        "representation": "--env-file",
        "description": "Read in a file of environment variables"
      },
      "generic-resource": {
        "representation": "--generic-resource",
        "description": "User defined resources"
      },
      "group": {
        "representation": "--group",
        "description": "API 1.25+Set one or more supplementary user groups for the container"
      },
      "health-cmd": {
        "representation": "--health-cmd",
        "description": "API 1.25+Command to run to check health"
      },
      "health-interval": {
        "representation": "--health-interval",
        "description": "API 1.25+Time between running the check (ms|s|m|h)"
      },
      "health-retries": {
        "representation": "--health-retries",
        "description": "API 1.25+Consecutive failures needed to report unhealthy"
      },
      "health-start-period": {
        "representation": "--health-start-period",
        "description": "API 1.29+Start period for the container to initialize before counting retries towards unstable (ms|s|m|h)"
      },
      "health-timeout": {
        "representation": "--health-timeout",
        "description": "API 1.25+Maximum time to allow one check to run (ms|s|m|h)"
      },
      "host": {
        "representation": "--host",
        "description": "API 1.25+Set one or more custom host-to-IP mappings (host:ip)"
      },
      "hostname": {
        "representation": "--hostname",
        "description": "API 1.25+Container hostname"
      },
      "init": {
        "representation": "--init",
        "description": "API 1.37+Use an init inside each service container to forward signals and reap processes"
      },
      "isolation": {
        "representation": "--isolation",
        "description": "API 1.35+Service container isolation mode"
      },
      "label": {
        "representation": "--label, -l",
        "description": "Service labels"
      },
      "limit-cpu": {
        "representation": "--limit-cpu",
        "description": "Limit CPUs"
      },
      "limit-memory": {
        "representation": "--limit-memory",
        "description": "Limit Memory"
      },
      "limit-pids": {
        "representation": "--limit-pids",
        "description": "API 1.41+SwarmLimit maximum number of processes (default 0 = unlimited)"
      },
      "log-driver": {
        "representation": "--log-driver",
        "description": "Logging driver for service"
      },
      "log-opt": {
        "representation": "--log-opt",
        "description": "Logging driver options"
      },
      "max-concurrent": {
        "representation": "--max-concurrent",
        "description": "API 1.41+Number of job tasks to run concurrently (default equal to --replicas)"
      },
      "mode": {
        "representation": "--mode",
        "description": "Service mode (replicated, global, replicated-job, or global-job)"
      },
      "mount": {
        "representation": "--mount",
        "description": "Attach a filesystem mount to the service"
      },
      "name": {
        "representation": "--name",
        "description": "Service name"
      },
      "network": {
        "representation": "--network",
        "description": "Network attachments"
      },
      "no-healthcheck": {
        "representation": "--no-healthcheck",
        "description": "API 1.25+Disable any container-specified HEALTHCHECK"
      },
      "no-resolve-image": {
        "representation": "--no-resolve-image",
        "description": "API 1.30+Do not query the registry to resolve image digest and supported platforms"
      },
      "placement-pref": {
        "representation": "--placement-pref",
        "description": "API 1.28+Add a placement preference"
      },
      "publish": {
        "representation": "--publish, -p",
        "description": "Publish a port as a node port"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress progress output"
      },
      "read-only": {
        "representation": "--read-only",
        "description": "API 1.28+Mount the container's root filesystem as read only"
      },
      "replicas": {
        "representation": "--replicas",
        "description": "Number of tasks"
      },
      "replicas-max-per-node": {
        "representation": "--replicas-max-per-node",
        "description": "API 1.40+Maximum number of tasks per node (default 0 = unlimited)"
      },
      "reserve-cpu": {
        "representation": "--reserve-cpu",
        "description": "Reserve CPUs"
      },
      "reserve-memory": {
        "representation": "--reserve-memory",
        "description": "Reserve Memory"
      },
      "restart-condition": {
        "representation": "--restart-condition",
        "description": "Restart when condition is met (\"none\"|\"on-failure\"|\"any\") (default \"any\")"
      },
      "restart-delay": {
        "representation": "--restart-delay",
        "description": "Delay between restart attempts (ns|us|ms|s|m|h) (default 5s)"
      },
      "restart-max-attempts": {
        "representation": "--restart-max-attempts",
        "description": "Maximum number of restarts before giving up"
      },
      "restart-window": {
        "representation": "--restart-window",
        "description": "Window used to evaluate the restart policy (ns|us|ms|s|m|h)"
      },
      "rollback-delay": {
        "representation": "--rollback-delay",
        "description": "API 1.28+Delay between task rollbacks (ns|us|ms|s|m|h) (default 0s)"
      },
      "rollback-failure-action": {
        "representation": "--rollback-failure-action",
        "description": "API 1.28+Action on rollback failure (\"pause\"|\"continue\") (default \"pause\")"
      },
      "rollback-max-failure-ratio": {
        "representation": "--rollback-max-failure-ratio",
        "description": "API 1.28+Failure rate to tolerate during a rollback (default 0)"
      },
      "rollback-monitor": {
        "representation": "--rollback-monitor",
        "description": "API 1.28+Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h) (default 5s)"
      },
      "rollback-order": {
        "representation": "--rollback-order",
        "description": "API 1.29+Rollback order (\"start-first\"|\"stop-first\") (default \"stop-first\")"
      },
      "rollback-parallelism": {
        "representation": "--rollback-parallelism",
        "description": "API 1.28+Maximum number of tasks rolled back simultaneously (0 to roll back all at once)"
      },
      "secret": {
        "representation": "--secret",
        "description": "API 1.25+Specify secrets to expose to the service"
      },
      "stop-grace-period": {
        "representation": "--stop-grace-period",
        "description": "Time to wait before force killing a container (ns|us|ms|s|m|h) (default 10s)"
      },
      "stop-signal": {
        "representation": "--stop-signal",
        "description": "API 1.28+Signal to stop the container"
      },
      "sysctl": {
        "representation": "--sysctl",
        "description": "API 1.40+Sysctl options"
      },
      "tty": {
        "representation": "--tty, -t",
        "description": "API 1.25+Allocate a pseudo-TTY"
      },
      "ulimit": {
        "representation": "--ulimit",
        "description": "API 1.41+Ulimit options"
      },
      "update-delay": {
        "representation": "--update-delay",
        "description": "Delay between updates (ns|us|ms|s|m|h) (default 0s)"
      },
      "update-failure-action": {
        "representation": "--update-failure-action",
        "description": "Action on update failure (\"pause\"|\"continue\"|\"rollback\") (default \"pause\")"
      },
      "update-max-failure-ratio": {
        "representation": "--update-max-failure-ratio",
        "description": "API 1.25+Failure rate to tolerate during an update (default 0)"
      },
      "update-monitor": {
        "representation": "--update-monitor",
        "description": "API 1.25+Duration after each task update to monitor for failure (ns|us|ms|s|m|h) (default 5s)"
      },
      "update-order": {
        "representation": "--update-order",
        "description": "API 1.29+Update order (\"start-first\"|\"stop-first\") (default \"stop-first\")"
      },
      "update-parallelism": {
        "representation": "--update-parallelism",
        "description": "Maximum number of tasks updated simultaneously (0 to update all at once)"
      },
      "user": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "with-registry-auth": {
        "representation": "--with-registry-auth",
        "description": "Send registry authentication details to swarm agents"
      },
      "workdir": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    }
  },
  {
    "command": "docker service inspect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      },
      "pretty": {
        "representation": "--pretty",
        "description": "Print the information in a human friendly format"
      }
    }
  },
  {
    "command": "docker service logs",
    "shortOptionDictionary": {
      "f": {
        "representation": "--follow, -f",
        "description": "Follow log output"
      },
      "n": {
        "representation": "--tail, -n",
        "description": "Number of lines to show from the end of the logs"
      },
      "t": {
        "representation": "--timestamps, -t",
        "description": "Show timestamps"
      }
    },
    "longOptionDictionary": {
      "details": {
        "representation": "--details",
        "description": "API 1.30+Show extra details provided to logs"
      },
      "follow": {
        "representation": "--follow, -f",
        "description": "Follow log output"
      },
      "no-resolve": {
        "representation": "--no-resolve",
        "description": "Do not map IDs to Names in output"
      },
      "no-task-ids": {
        "representation": "--no-task-ids",
        "description": "Do not include task IDs in output"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Do not truncate output"
      },
      "raw": {
        "representation": "--raw",
        "description": "API 1.30+Do not neatly format logs"
      },
      "since": {
        "representation": "--since",
        "description": "Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)"
      },
      "tail": {
        "representation": "--tail, -n",
        "description": "Number of lines to show from the end of the logs"
      },
      "timestamps": {
        "representation": "--timestamps, -t",
        "description": "Show timestamps"
      }
    }
  },
  {
    "command": "docker service ls",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display IDs"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print services using a Go template"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display IDs"
      }
    }
  },
  {
    "command": "docker service ps",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display task IDs"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print tasks using a Go template"
      },
      "no-resolve": {
        "representation": "--no-resolve",
        "description": "Do not map IDs to Names"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Do not truncate output"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display task IDs"
      }
    }
  },
  {
    "command": "docker service rm",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker service rollback",
    "shortOptionDictionary": {
      "d": {
        "representation": "--detach, -d",
        "description": "API 1.29+Exit immediately instead of waiting for the service to converge"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress progress output"
      }
    },
    "longOptionDictionary": {
      "detach": {
        "representation": "--detach, -d",
        "description": "API 1.29+Exit immediately instead of waiting for the service to converge"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress progress output"
      }
    }
  },
  {
    "command": "docker service scale",
    "shortOptionDictionary": {
      "d": {
        "representation": "--detach, -d",
        "description": "API 1.29+Exit immediately instead of waiting for the service to converge"
      }
    },
    "longOptionDictionary": {
      "detach": {
        "representation": "--detach, -d",
        "description": "API 1.29+Exit immediately instead of waiting for the service to converge"
      }
    }
  },
  {
    "command": "docker service update",
    "shortOptionDictionary": {
      "d": {
        "representation": "--detach, -d",
        "description": "API 1.29+Exit immediately instead of waiting for the service to converge"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress progress output"
      },
      "t": {
        "representation": "--tty, -t",
        "description": "API 1.25+Allocate a pseudo-TTY"
      },
      "u": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "w": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    },
    "longOptionDictionary": {
      "args": {
        "representation": "--args",
        "description": "Service command args"
      },
      "cap-add": {
        "representation": "--cap-add",
        "description": "API 1.41+Add Linux capabilities"
      },
      "cap-drop": {
        "representation": "--cap-drop",
        "description": "API 1.41+Drop Linux capabilities"
      },
      "config-add": {
        "representation": "--config-add",
        "description": "API 1.30+Add or update a config file on a service"
      },
      "config-rm": {
        "representation": "--config-rm",
        "description": "API 1.30+Remove a configuration file"
      },
      "constraint-add": {
        "representation": "--constraint-add",
        "description": "Add or update a placement constraint"
      },
      "constraint-rm": {
        "representation": "--constraint-rm",
        "description": "Remove a constraint"
      },
      "container-label-add": {
        "representation": "--container-label-add",
        "description": "Add or update a container label"
      },
      "container-label-rm": {
        "representation": "--container-label-rm",
        "description": "Remove a container label by its key"
      },
      "credential-spec": {
        "representation": "--credential-spec",
        "description": "API 1.29+Credential spec for managed service account (Windows only)"
      },
      "detach": {
        "representation": "--detach, -d",
        "description": "API 1.29+Exit immediately instead of waiting for the service to converge"
      },
      "dns-add": {
        "representation": "--dns-add",
        "description": "API 1.25+Add or update a custom DNS server"
      },
      "dns-option-add": {
        "representation": "--dns-option-add",
        "description": "API 1.25+Add or update a DNS option"
      },
      "dns-option-rm": {
        "representation": "--dns-option-rm",
        "description": "API 1.25+Remove a DNS option"
      },
      "dns-rm": {
        "representation": "--dns-rm",
        "description": "API 1.25+Remove a custom DNS server"
      },
      "dns-search-add": {
        "representation": "--dns-search-add",
        "description": "API 1.25+Add or update a custom DNS search domain"
      },
      "dns-search-rm": {
        "representation": "--dns-search-rm",
        "description": "API 1.25+Remove a DNS search domain"
      },
      "endpoint-mode": {
        "representation": "--endpoint-mode",
        "description": "Endpoint mode (vip or dnsrr)"
      },
      "entrypoint": {
        "representation": "--entrypoint",
        "description": "Overwrite the default ENTRYPOINT of the image"
      },
      "env-add": {
        "representation": "--env-add",
        "description": "Add or update an environment variable"
      },
      "env-rm": {
        "representation": "--env-rm",
        "description": "Remove an environment variable"
      },
      "force": {
        "representation": "--force",
        "description": "API 1.25+Force update even if no changes require it"
      },
      "generic-resource-add": {
        "representation": "--generic-resource-add",
        "description": "Add a Generic resource"
      },
      "generic-resource-rm": {
        "representation": "--generic-resource-rm",
        "description": "Remove a Generic resource"
      },
      "group-add": {
        "representation": "--group-add",
        "description": "API 1.25+Add an additional supplementary user group to the container"
      },
      "group-rm": {
        "representation": "--group-rm",
        "description": "API 1.25+Remove a previously added supplementary user group from the container"
      },
      "health-cmd": {
        "representation": "--health-cmd",
        "description": "API 1.25+Command to run to check health"
      },
      "health-interval": {
        "representation": "--health-interval",
        "description": "API 1.25+Time between running the check (ms|s|m|h)"
      },
      "health-retries": {
        "representation": "--health-retries",
        "description": "API 1.25+Consecutive failures needed to report unhealthy"
      },
      "health-start-period": {
        "representation": "--health-start-period",
        "description": "API 1.29+Start period for the container to initialize before counting retries towards unstable (ms|s|m|h)"
      },
      "health-timeout": {
        "representation": "--health-timeout",
        "description": "API 1.25+Maximum time to allow one check to run (ms|s|m|h)"
      },
      "host-add": {
        "representation": "--host-add",
        "description": "API 1.32+Add a custom host-to-IP mapping (host:ip)"
      },
      "host-rm": {
        "representation": "--host-rm",
        "description": "API 1.25+Remove a custom host-to-IP mapping (host:ip)"
      },
      "hostname": {
        "representation": "--hostname",
        "description": "API 1.25+Container hostname"
      },
      "image": {
        "representation": "--image",
        "description": "Service image tag"
      },
      "init": {
        "representation": "--init",
        "description": "API 1.37+Use an init inside each service container to forward signals and reap processes"
      },
      "isolation": {
        "representation": "--isolation",
        "description": "API 1.35+Service container isolation mode"
      },
      "label-add": {
        "representation": "--label-add",
        "description": "Add or update a service label"
      },
      "label-rm": {
        "representation": "--label-rm",
        "description": "Remove a label by its key"
      },
      "limit-cpu": {
        "representation": "--limit-cpu",
        "description": "Limit CPUs"
      },
      "limit-memory": {
        "representation": "--limit-memory",
        "description": "Limit Memory"
      },
      "limit-pids": {
        "representation": "--limit-pids",
        "description": "API 1.41+SwarmLimit maximum number of processes (default 0 = unlimited)"
      },
      "log-driver": {
        "representation": "--log-driver",
        "description": "Logging driver for service"
      },
      "log-opt": {
        "representation": "--log-opt",
        "description": "Logging driver options"
      },
      "max-concurrent": {
        "representation": "--max-concurrent",
        "description": "API 1.41+Number of job tasks to run concurrently (default equal to --replicas)"
      },
      "mount-add": {
        "representation": "--mount-add",
        "description": "Add or update a mount on a service"
      },
      "mount-rm": {
        "representation": "--mount-rm",
        "description": "Remove a mount by its target path"
      },
      "network-add": {
        "representation": "--network-add",
        "description": "API 1.29+Add a network"
      },
      "network-rm": {
        "representation": "--network-rm",
        "description": "API 1.29+Remove a network"
      },
      "no-healthcheck": {
        "representation": "--no-healthcheck",
        "description": "API 1.25+Disable any container-specified HEALTHCHECK"
      },
      "no-resolve-image": {
        "representation": "--no-resolve-image",
        "description": "API 1.30+Do not query the registry to resolve image digest and supported platforms"
      },
      "placement-pref-add": {
        "representation": "--placement-pref-add",
        "description": "API 1.28+Add a placement preference"
      },
      "placement-pref-rm": {
        "representation": "--placement-pref-rm",
        "description": "API 1.28+Remove a placement preference"
      },
      "publish-add": {
        "representation": "--publish-add",
        "description": "Add or update a published port"
      },
      "publish-rm": {
        "representation": "--publish-rm",
        "description": "Remove a published port by its target port"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress progress output"
      },
      "read-only": {
        "representation": "--read-only",
        "description": "API 1.28+Mount the container's root filesystem as read only"
      },
      "replicas": {
        "representation": "--replicas",
        "description": "Number of tasks"
      },
      "replicas-max-per-node": {
        "representation": "--replicas-max-per-node",
        "description": "API 1.40+Maximum number of tasks per node (default 0 = unlimited)"
      },
      "reserve-cpu": {
        "representation": "--reserve-cpu",
        "description": "Reserve CPUs"
      },
      "reserve-memory": {
        "representation": "--reserve-memory",
        "description": "Reserve Memory"
      },
      "restart-condition": {
        "representation": "--restart-condition",
        "description": "Restart when condition is met (\"none\"|\"on-failure\"|\"any\")"
      },
      "restart-delay": {
        "representation": "--restart-delay",
        "description": "Delay between restart attempts (ns|us|ms|s|m|h)"
      },
      "restart-max-attempts": {
        "representation": "--restart-max-attempts",
        "description": "Maximum number of restarts before giving up"
      },
      "restart-window": {
        "representation": "--restart-window",
        "description": "Window used to evaluate the restart policy (ns|us|ms|s|m|h)"
      },
      "rollback": {
        "representation": "--rollback",
        "description": "API 1.25+Rollback to previous specification"
      },
      "rollback-delay": {
        "representation": "--rollback-delay",
        "description": "API 1.28+Delay between task rollbacks (ns|us|ms|s|m|h)"
      },
      "rollback-failure-action": {
        "representation": "--rollback-failure-action",
        "description": "API 1.28+Action on rollback failure (\"pause\"|\"continue\")"
      },
      "rollback-max-failure-ratio": {
        "representation": "--rollback-max-failure-ratio",
        "description": "API 1.28+Failure rate to tolerate during a rollback"
      },
      "rollback-monitor": {
        "representation": "--rollback-monitor",
        "description": "API 1.28+Duration after each task rollback to monitor for failure (ns|us|ms|s|m|h)"
      },
      "rollback-order": {
        "representation": "--rollback-order",
        "description": "API 1.29+Rollback order (\"start-first\"|\"stop-first\")"
      },
      "rollback-parallelism": {
        "representation": "--rollback-parallelism",
        "description": "API 1.28+Maximum number of tasks rolled back simultaneously (0 to roll back all at once)"
      },
      "secret-add": {
        "representation": "--secret-add",
        "description": "API 1.25+Add or update a secret on a service"
      },
      "secret-rm": {
        "representation": "--secret-rm",
        "description": "API 1.25+Remove a secret"
      },
      "stop-grace-period": {
        "representation": "--stop-grace-period",
        "description": "Time to wait before force killing a container (ns|us|ms|s|m|h)"
      },
      "stop-signal": {
        "representation": "--stop-signal",
        "description": "API 1.28+Signal to stop the container"
      },
      "sysctl-add": {
        "representation": "--sysctl-add",
        "description": "API 1.40+Add or update a Sysctl option"
      },
      "sysctl-rm": {
        "representation": "--sysctl-rm",
        "description": "API 1.40+Remove a Sysctl option"
      },
      "tty": {
        "representation": "--tty, -t",
        "description": "API 1.25+Allocate a pseudo-TTY"
      },
      "ulimit-add": {
        "representation": "--ulimit-add",
        "description": "API 1.41+Add or update a ulimit option"
      },
      "ulimit-rm": {
        "representation": "--ulimit-rm",
        "description": "API 1.41+Remove a ulimit option"
      },
      "update-delay": {
        "representation": "--update-delay",
        "description": "Delay between updates (ns|us|ms|s|m|h)"
      },
      "update-failure-action": {
        "representation": "--update-failure-action",
        "description": "Action on update failure (\"pause\"|\"continue\"|\"rollback\")"
      },
      "update-max-failure-ratio": {
        "representation": "--update-max-failure-ratio",
        "description": "API 1.25+Failure rate to tolerate during an update"
      },
      "update-monitor": {
        "representation": "--update-monitor",
        "description": "API 1.25+Duration after each task update to monitor for failure (ns|us|ms|s|m|h)"
      },
      "update-order": {
        "representation": "--update-order",
        "description": "API 1.29+Update order (\"start-first\"|\"stop-first\")"
      },
      "update-parallelism": {
        "representation": "--update-parallelism",
        "description": "Maximum number of tasks updated simultaneously (0 to update all at once)"
      },
      "user": {
        "representation": "--user, -u",
        "description": "Username or UID (format: <name|uid>[:<group|gid>])"
      },
      "with-registry-auth": {
        "representation": "--with-registry-auth",
        "description": "Send registry authentication details to swarm agents"
      },
      "workdir": {
        "representation": "--workdir, -w",
        "description": "Working directory inside the container"
      }
    }
  },
  {
    "command": "docker stack deploy",
    "shortOptionDictionary": {
      "c": {
        "representation": "--compose-file, -c",
        "description": "API 1.25+Path to a Compose file, or \"-\" to read from stdin"
      }
    },
    "longOptionDictionary": {
      "compose-file": {
        "representation": "--compose-file, -c",
        "description": "API 1.25+Path to a Compose file, or \"-\" to read from stdin"
      },
      "namespace": {
        "representation": "--namespace",
        "description": "deprecatedKubernetesKubernetes namespace to use"
      },
      "prune": {
        "representation": "--prune",
        "description": "API 1.27+SwarmPrune services that are no longer referenced"
      },
      "resolve-image": {
        "representation": "--resolve-image",
        "description": "API 1.30+SwarmQuery the registry to resolve image digest and supported platforms (\"always\"|\"changed\"|\"never\")"
      },
      "with-registry-auth": {
        "representation": "--with-registry-auth",
        "description": "SwarmSend registry authentication details to Swarm agents"
      },
      "kubeconfig": {
        "representation": "--kubeconfig",
        "description": "deprecatedKubernetesKubernetes config file"
      },
      "orchestrator": {
        "representation": "--orchestrator",
        "description": "deprecatedOrchestrator to use (swarm|kubernetes|all)"
      }
    }
  },
  {
    "command": "docker stack ls",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "all-namespaces": {
        "representation": "--all-namespaces",
        "description": "deprecatedKubernetesList stacks from all Kubernetes namespaces"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print stacks using a Go template"
      },
      "namespace": {
        "representation": "--namespace",
        "description": "deprecatedKubernetesKubernetes namespaces to use"
      },
      "kubeconfig": {
        "representation": "--kubeconfig",
        "description": "deprecatedKubernetesKubernetes config file"
      },
      "orchestrator": {
        "representation": "--orchestrator",
        "description": "deprecatedOrchestrator to use (swarm|kubernetes|all)"
      }
    }
  },
  {
    "command": "docker stack ps",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display task IDs"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print tasks using a Go template"
      },
      "namespace": {
        "representation": "--namespace",
        "description": "deprecatedKubernetesKubernetes namespace to use"
      },
      "no-resolve": {
        "representation": "--no-resolve",
        "description": "Do not map IDs to Names"
      },
      "no-trunc": {
        "representation": "--no-trunc",
        "description": "Do not truncate output"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display task IDs"
      },
      "kubeconfig": {
        "representation": "--kubeconfig",
        "description": "deprecatedKubernetesKubernetes config file"
      },
      "orchestrator": {
        "representation": "--orchestrator",
        "description": "deprecatedOrchestrator to use (swarm|kubernetes|all)"
      }
    }
  },
  {
    "command": "docker stack rm",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "namespace": {
        "representation": "--namespace",
        "description": "deprecatedKubernetesKubernetes namespace to use"
      },
      "kubeconfig": {
        "representation": "--kubeconfig",
        "description": "deprecatedKubernetesKubernetes config file"
      },
      "orchestrator": {
        "representation": "--orchestrator",
        "description": "deprecatedOrchestrator to use (swarm|kubernetes|all)"
      }
    }
  },
  {
    "command": "docker stack services",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display IDs"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print services using a Go template"
      },
      "namespace": {
        "representation": "--namespace",
        "description": "deprecatedKubernetesKubernetes namespace to use"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display IDs"
      },
      "kubeconfig": {
        "representation": "--kubeconfig",
        "description": "deprecatedKubernetesKubernetes config file"
      },
      "orchestrator": {
        "representation": "--orchestrator",
        "description": "deprecatedOrchestrator to use (swarm|kubernetes|all)"
      }
    }
  },
  {
    "command": "docker swarm ca",
    "shortOptionDictionary": {
      "d": {
        "representation": "--detach, -d",
        "description": "Exit immediately instead of waiting for the root rotation to converge"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Suppress progress output"
      }
    },
    "longOptionDictionary": {
      "ca-cert": {
        "representation": "--ca-cert",
        "description": "Path to the PEM-formatted root CA certificate to use for the new cluster"
      },
      "ca-key": {
        "representation": "--ca-key",
        "description": "Path to the PEM-formatted root CA key to use for the new cluster"
      },
      "cert-expiry": {
        "representation": "--cert-expiry",
        "description": "Validity period for node certificates (ns|us|ms|s|m|h)"
      },
      "detach": {
        "representation": "--detach, -d",
        "description": "Exit immediately instead of waiting for the root rotation to converge"
      },
      "external-ca": {
        "representation": "--external-ca",
        "description": "Specifications of one or more certificate signing endpoints"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Suppress progress output"
      },
      "rotate": {
        "representation": "--rotate",
        "description": "Rotate the swarm CA - if no certificate or key are provided, new ones will be generated"
      }
    }
  },
  {
    "command": "docker swarm init",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "advertise-addr": {
        "representation": "--advertise-addr",
        "description": "Advertised address (format: <ip|interface>[:port])"
      },
      "autolock": {
        "representation": "--autolock",
        "description": "Enable manager autolocking (requiring an unlock key to start a stopped manager)"
      },
      "availability": {
        "representation": "--availability",
        "description": "Availability of the node (\"active\"|\"pause\"|\"drain\")"
      },
      "cert-expiry": {
        "representation": "--cert-expiry",
        "description": "Validity period for node certificates (ns|us|ms|s|m|h)"
      },
      "data-path-addr": {
        "representation": "--data-path-addr",
        "description": "API 1.31+Address or interface to use for data path traffic (format: <ip|interface>)"
      },
      "data-path-port": {
        "representation": "--data-path-port",
        "description": "API 1.40+Port number to use for data path traffic (1024 - 49151). If no value is set or is set to 0, the default port (4789) is used."
      },
      "default-addr-pool": {
        "representation": "--default-addr-pool",
        "description": "API 1.39+default address pool in CIDR format"
      },
      "default-addr-pool-mask-length": {
        "representation": "--default-addr-pool-mask-length",
        "description": "API 1.39+default address pool subnet mask length"
      },
      "dispatcher-heartbeat": {
        "representation": "--dispatcher-heartbeat",
        "description": "Dispatcher heartbeat period (ns|us|ms|s|m|h)"
      },
      "external-ca": {
        "representation": "--external-ca",
        "description": "Specifications of one or more certificate signing endpoints"
      },
      "force-new-cluster": {
        "representation": "--force-new-cluster",
        "description": "Force create a new cluster from current state"
      },
      "listen-addr": {
        "representation": "--listen-addr",
        "description": "Listen address (format: <ip|interface>[:port])"
      },
      "max-snapshots": {
        "representation": "--max-snapshots",
        "description": "API 1.25+Number of additional Raft snapshots to retain"
      },
      "snapshot-interval": {
        "representation": "--snapshot-interval",
        "description": "API 1.25+Number of log entries between Raft snapshots"
      },
      "task-history-limit": {
        "representation": "--task-history-limit",
        "description": "Task history retention limit"
      }
    }
  },
  {
    "command": "docker swarm join",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "advertise-addr": {
        "representation": "--advertise-addr",
        "description": "Advertised address (format: <ip|interface>[:port])"
      },
      "availability": {
        "representation": "--availability",
        "description": "Availability of the node (\"active\"|\"pause\"|\"drain\")"
      },
      "data-path-addr": {
        "representation": "--data-path-addr",
        "description": "API 1.31+Address or interface to use for data path traffic (format: <ip|interface>)"
      },
      "listen-addr": {
        "representation": "--listen-addr",
        "description": "Listen address (format: <ip|interface>[:port])"
      },
      "token": {
        "representation": "--token",
        "description": "Token for entry into the swarm"
      }
    }
  },
  {
    "command": "docker swarm join-token",
    "shortOptionDictionary": {
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display token"
      }
    },
    "longOptionDictionary": {
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display token"
      },
      "rotate": {
        "representation": "--rotate",
        "description": "Rotate join token"
      }
    }
  },
  {
    "command": "docker swarm leave",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Force this node to leave the swarm, ignoring warnings"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Force this node to leave the swarm, ignoring warnings"
      }
    }
  },
  {
    "command": "docker swarm unlock",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker swarm unlock-key",
    "shortOptionDictionary": {
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display token"
      }
    },
    "longOptionDictionary": {
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display token"
      },
      "rotate": {
        "representation": "--rotate",
        "description": "Rotate unlock key"
      }
    }
  },
  {
    "command": "docker swarm update",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "autolock": {
        "representation": "--autolock",
        "description": "Change manager autolocking setting (true|false)"
      },
      "cert-expiry": {
        "representation": "--cert-expiry",
        "description": "Validity period for node certificates (ns|us|ms|s|m|h)"
      },
      "dispatcher-heartbeat": {
        "representation": "--dispatcher-heartbeat",
        "description": "Dispatcher heartbeat period (ns|us|ms|s|m|h)"
      },
      "external-ca": {
        "representation": "--external-ca",
        "description": "Specifications of one or more certificate signing endpoints"
      },
      "max-snapshots": {
        "representation": "--max-snapshots",
        "description": "API 1.25+Number of additional Raft snapshots to retain"
      },
      "snapshot-interval": {
        "representation": "--snapshot-interval",
        "description": "API 1.25+Number of log entries between Raft snapshots"
      },
      "task-history-limit": {
        "representation": "--task-history-limit",
        "description": "Task history retention limit"
      }
    }
  },
  {
    "command": "docker system df",
    "shortOptionDictionary": {
      "v": {
        "representation": "--verbose, -v",
        "description": "Show detailed information on space usage"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format",
        "description": "Pretty-print images using a Go template"
      },
      "verbose": {
        "representation": "--verbose, -v",
        "description": "Show detailed information on space usage"
      }
    }
  },
  {
    "command": "docker system events",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Filter output based on conditions provided"
      },
      "format": {
        "representation": "--format",
        "description": "Format the output using the given Go template"
      },
      "since": {
        "representation": "--since",
        "description": "Show all events created since timestamp"
      },
      "until": {
        "representation": "--until",
        "description": "Stream events until this timestamp"
      }
    }
  },
  {
    "command": "docker system info",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    }
  },
  {
    "command": "docker system prune",
    "shortOptionDictionary": {
      "a": {
        "representation": "--all, -a",
        "description": "Remove all unused images not just dangling ones"
      },
      "f": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      }
    },
    "longOptionDictionary": {
      "all": {
        "representation": "--all, -a",
        "description": "Remove all unused images not just dangling ones"
      },
      "filter": {
        "representation": "--filter",
        "description": "API 1.28+Provide filter values (e.g. 'label=<key>=<value>')"
      },
      "force": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      },
      "volumes": {
        "representation": "--volumes",
        "description": "Prune volumes"
      }
    }
  },
  {
    "command": "docker trust inspect",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "pretty": {
        "representation": "--pretty",
        "description": "Print the information in a human friendly format"
      }
    }
  },
  {
    "command": "docker trust key",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker trust revoke",
    "shortOptionDictionary": {
      "y": {
        "representation": "--yes, -y",
        "description": "Do not prompt for confirmation"
      }
    },
    "longOptionDictionary": {
      "yes": {
        "representation": "--yes, -y",
        "description": "Do not prompt for confirmation"
      }
    }
  },
  {
    "command": "docker trust sign",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "local": {
        "representation": "--local",
        "description": "Sign a locally tagged image"
      }
    }
  },
  {
    "command": "docker trust signer",
    "shortOptionDictionary": {},
    "longOptionDictionary": {}
  },
  {
    "command": "docker trust key generate",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "dir": {
        "representation": "--dir",
        "description": "Directory to generate key in, defaults to current directory"
      }
    }
  },
  {
    "command": "docker trust key load",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "name": {
        "representation": "--name",
        "description": "Name for the loaded key"
      }
    }
  },
  {
    "command": "docker trust signer add",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "key": {
        "representation": "--key",
        "description": "Path to the signer's public key file"
      }
    }
  },
  {
    "command": "docker trust signer remove",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation before removing the most recent signer"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation before removing the most recent signer"
      }
    }
  },
  {
    "command": "docker volume create",
    "shortOptionDictionary": {
      "d": {
        "representation": "--driver, -d",
        "description": "Specify volume driver name"
      },
      "o": {
        "representation": "--opt, -o",
        "description": "Set driver specific options"
      }
    },
    "longOptionDictionary": {
      "driver": {
        "representation": "--driver, -d",
        "description": "Specify volume driver name"
      },
      "label": {
        "representation": "--label",
        "description": "Set metadata for a volume"
      },
      "name": {
        "representation": "--name",
        "description": "Specify volume name"
      },
      "opt": {
        "representation": "--opt, -o",
        "description": "Set driver specific options"
      }
    }
  },
  {
    "command": "docker volume inspect",
    "shortOptionDictionary": {
      "f": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    },
    "longOptionDictionary": {
      "format": {
        "representation": "--format, -f",
        "description": "Format the output using the given Go template"
      }
    }
  },
  {
    "command": "docker volume ls",
    "shortOptionDictionary": {
      "f": {
        "representation": "--filter, -f",
        "description": "Provide filter values (e.g. 'dangling=true')"
      },
      "q": {
        "representation": "--quiet, -q",
        "description": "Only display volume names"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter, -f",
        "description": "Provide filter values (e.g. 'dangling=true')"
      },
      "format": {
        "representation": "--format",
        "description": "Pretty-print volumes using a Go template"
      },
      "quiet": {
        "representation": "--quiet, -q",
        "description": "Only display volume names"
      }
    }
  },
  {
    "command": "docker volume prune",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      }
    },
    "longOptionDictionary": {
      "filter": {
        "representation": "--filter",
        "description": "Provide filter values (e.g. 'label=<label>')"
      },
      "force": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation"
      }
    }
  },
  {
    "command": "docker volume rm",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "API 1.25+Force the removal of one or more volumes"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "API 1.25+Force the removal of one or more volumes"
      }
    }
  },
  {
    "command": "docker trust key generate",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "dir": {
        "representation": "--dir",
        "description": "Directory to generate key in, defaults to current directory"
      }
    }
  },
  {
    "command": "docker trust key load",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "name": {
        "representation": "--name",
        "description": "Name for the loaded key"
      }
    }
  },
  {
    "command": "docker trust signer add",
    "shortOptionDictionary": {},
    "longOptionDictionary": {
      "key": {
        "representation": "--key",
        "description": "Path to the signer's public key file"
      }
    }
  },
  {
    "command": "docker trust signer remove",
    "shortOptionDictionary": {
      "f": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation before removing the most recent signer"
      }
    },
    "longOptionDictionary": {
      "force": {
        "representation": "--force, -f",
        "description": "Do not prompt for confirmation before removing the most recent signer"
      }
    }
  }
]
